#!/bin/bash

# ================================
#  üõ°Ô∏è Tailscale Guardian Script
#  Advanced + Auto Reconnect
# ================================

STATE_FILE="/var/lib/tailscale/tailscaled.state"
SOCKET_FILE="/var/run/tailscale/tailscaled.sock"
LOG_FILE="/var/log/tailscale-guardian.log"
HOSTNAME="server-node"
AUTH_KEY="<YOUR_AUTH_KEY>"

USE_USERSPACE_NETWORKING=true
SKIP_IPTABLES=false
SKIP_TUN_CHECK=false

sudo mkdir -p /var/lib/tailscale
sudo mkdir -p /var/run/tailscale
sudo mkdir -p /var/log
sudo touch "$LOG_FILE"
sudo chmod 666 "$LOG_FILE"

check_environment() {
  echo "$(date) üîç ŸÅÿ≠ÿµ ÿßŸÑÿ®Ÿäÿ¶ÿ©..." >> "$LOG_FILE"

  if [ -f /.dockerenv ] || [ -n "${CONTAINER:-}" ]; then
    echo "$(date) ‚ö†Ô∏è Container/Docker detected" >> "$LOG_FILE"
    USE_USERSPACE_NETWORKING=true
    SKIP_IPTABLES=true
  fi

  if ! modprobe tun 2>/dev/null; then
    echo "$(date) ‚ö†Ô∏è TUN module ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠" >> "$LOG_FILE"
    USE_USERSPACE_NETWORKING=true
  else
    echo "$(date) ‚úÖ TUN module ŸÖÿ™ÿßÿ≠" >> "$LOG_FILE"
  fi

  if ! iptables -L >/dev/null 2>&1; then
    echo "$(date) ‚ö†Ô∏è iptables ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠" >> "$LOG_FILE"
    SKIP_IPTABLES=true
  else
    echo "$(date) ‚úÖ iptables ŸÖÿ™ÿßÿ≠" >> "$LOG_FILE"
  fi

  if [ "$EUID" -ne 0 ]; then
    echo "$(date) ‚ö†Ô∏è ÿßŸÑÿ≥ŸÉÿ±ÿ®ÿ™ ŸÑÿß ŸäÿπŸÖŸÑ ŸÉŸÄ root" >> "$LOG_FILE"
  fi
}

start_tailscaled() {
  if ! pgrep -x "tailscaled" > /dev/null; then
    echo "$(date) üî∏ ÿ™ÿ¥ÿ∫ŸäŸÑ tailscaled..." >> "$LOG_FILE"
    CMD="tailscaled --state=$STATE_FILE --socket=$SOCKET_FILE"
    [ "$USE_USERSPACE_NETWORKING" = true ] && CMD="$CMD --tun=userspace-networking"
    [ "$SKIP_IPTABLES" = true ] && CMD="$CMD --netfilter-mode=off"
    if sudo $CMD >> "$LOG_FILE" 2>&1 & then
      echo "$(date) ‚úÖ ÿ™ŸÖ ÿ™ÿ¥ÿ∫ŸäŸÑ tailscaled ÿ®ŸÜÿ¨ÿßÿ≠" >> "$LOG_FILE"
      sleep 5
    else
      echo "$(date) ‚ùå ŸÅÿ¥ŸÑ ŸÅŸä ÿ™ÿ¥ÿ∫ŸäŸÑ tailscaled" >> "$LOG_FILE"
    fi
  else
    echo "$(date) ‚úÖ tailscaled ÿ¥ÿ∫ÿßŸÑ" >> "$LOG_FILE"
  fi
}

check_and_up() {
  if ! tailscale status > /dev/null 2>&1; then
    echo "$(date) üöÄ ÿ™ŸÅÿπŸäŸÑ ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿπÿ®ÿ± Tailscale..." >> "$LOG_FILE"
    if [ "$AUTH_KEY" = "<YOUR_AUTH_KEY>" ]; then
      echo "$(date) ‚ö†Ô∏è ŸÑŸÖ Ÿäÿ™ŸÖ ÿ™ÿπŸäŸäŸÜ AUTH_KEY" >> "$LOG_FILE"
      return 1
    fi
    if sudo tailscale up --authkey="$AUTH_KEY" --hostname="$HOSTNAME" --ssh >> "$LOG_FILE" 2>&1; then
      echo "$(date) ‚úÖ ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ŸÜÿ¨ÿßÿ≠" >> "$LOG_FILE"
    else
      echo "$(date) ‚ùå ŸÅÿ¥ŸÑ ŸÅŸä ÿ™ŸÅÿπŸäŸÑ ÿßŸÑÿßÿ™ÿµÿßŸÑ" >> "$LOG_FILE"
    fi
    sleep 5
  else
    echo "$(date) üü¢ ÿßŸÑÿßÿ™ÿµÿßŸÑ ŸÅÿπÿßŸÑ" >> "$LOG_FILE"
  fi
}

# üí° ÿØÿßŸÑÿ© ÿ•ÿπÿßÿØÿ© ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿßŸÑÿ™ŸÑŸÇÿßÿ¶Ÿäÿ© ÿ•ÿ∞ÿß ŸÅŸÇÿØ ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ÿßŸÑÿÆÿßÿØŸÖ
auto_reconnect_if_lost() {
  if tailscale status 2>&1 | grep -q "Unable to connect to the Tailscale coordination server"; then
    echo "$(date) ‚ö†Ô∏è ÿ™ŸÖ ÿßŸÉÿ™ÿ¥ÿßŸÅ ŸÅŸÇÿØÿßŸÜ ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ÿßŸÑÿÆÿßÿØŸÖ ‚Äî ÿ•ÿπÿßÿØÿ© ÿßŸÑÿßÿ™ÿµÿßŸÑ..." | tee -a "$LOG_FILE"
    sudo tailscale logout >> "$LOG_FILE" 2>&1
    sudo tailscale up --authkey="$AUTH_KEY" --hostname="$HOSTNAME" --ssh >> "$LOG_FILE" 2>&1
    echo "$(date) üîÑ ÿ™ŸÖ ÿ™ŸÜŸÅŸäÿ∞ ÿπŸÖŸÑŸäÿ© ÿ•ÿπÿßÿØÿ© ÿßŸÑÿßÿ™ÿµÿßŸÑ" >> "$LOG_FILE"
  fi
}

show_status() {
  echo "$(date) üìä ŸÅÿ≠ÿµ ÿ≠ÿßŸÑÿ© Tailscale..." >> "$LOG_FILE"
  if tailscale status > /dev/null 2>&1; then
    echo "$(date) ‚úÖ Tailscale ŸÖÿ™ÿµŸÑ ÿ®ŸÜÿ¨ÿßÿ≠" >> "$LOG_FILE"
    tailscale status >> "$LOG_FILE" 2>&1
  else
    echo "$(date) ‚ùå Tailscale ÿ∫Ÿäÿ± ŸÖÿ™ÿµŸÑ" >> "$LOG_FILE"
  fi
}

cleanup() {
  echo "$(date) üõë ÿ•ŸäŸÇÿßŸÅ Tailscale Guardian..." >> "$LOG_FILE"
  exit 0
}

trap cleanup SIGTERM SIGINT

show_help() {
  echo "üõ°Ô∏è Tailscale Guardian Script - Advanced + Auto Reconnect"
  echo "  --help, -h          ÿπÿ±ÿ∂ Ÿáÿ∞Ÿá ÿßŸÑŸÖÿ≥ÿßÿπÿØÿ©"
  echo "  --userspace         ŸÅÿ±ÿ∂ userspace networking"
  echo "  --skip-iptables     ÿ™ÿÆÿ∑Ÿä iptables"
  echo "  --check-only        ŸÅÿ≠ÿµ ÿßŸÑÿ≠ÿßŸÑÿ© ŸÅŸÇÿ∑"
}

while [[ $# -gt 0 ]]; do
  case $1 in
    --help|-h) show_help; exit 0 ;;
    --userspace) USE_USERSPACE_NETWORKING=true; shift ;;
    --skip-iptables) SKIP_IPTABLES=true; shift ;;
    --check-only) check_environment; show_status; exit 0 ;;
    *) echo "ÿÆŸäÿßÿ± ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ: $1"; show_help; exit 1 ;;
  esac
done

echo "$(date) üõ°Ô∏è ÿ®ÿØÿ° ŸÖÿ±ÿßŸÇÿ®ÿ© Tailscale..." >> "$LOG_FILE"
check_environment

LAST_REFRESH=$(date +%s)

while true
do
  start_tailscaled
  check_and_up
  auto_reconnect_if_lost
  show_status

  # ‚è≥ ÿ•ÿπÿßÿØÿ© ÿßŸÑÿßÿ™ÿµÿßŸÑ ŸÉŸÑ ÿ≥ÿßÿπÿ™ŸäŸÜ ÿ≠ÿ™Ÿâ ŸÑŸà ŸÖÿß ŸÅŸä ŸÖÿ¥ŸÉŸÑÿ©
  NOW=$(date +%s)
  if (( NOW - LAST_REFRESH > 7200 )); then
    echo "$(date) üïí ÿ•ÿπÿßÿØÿ© ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿßŸÑÿØŸàÿ±Ÿäÿ© ŸÑŸÑÿ≠ŸÅÿßÿ∏ ÿπŸÑŸâ ÿßŸÑÿ¨ŸÑÿ≥ÿ©" >> "$LOG_FILE"
    sudo tailscale logout >> "$LOG_FILE" 2>&1
    sudo tailscale up --authkey="$AUTH_KEY" --hostname="$HOSTNAME" --ssh >> "$LOG_FILE" 2>&1
    LAST_REFRESH=$NOW
  fi

  sleep 60
done
