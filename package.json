{
  "name": "smart-bootloader-system",
  "version": "1.0.0",
  "description": "نظام Bootloader ذكي للتطوير المستمر والتحسين التلقائي",
  "type": "module",
  "main": "autoloop.agent.mjs",
  "bin": {
    "smart-agent": "./autoloop.agent.mjs"
  },
  "scripts": {
    "start": "node autoloop.agent.mjs",
    "agent:auto": "node autoloop.agent.mjs --watch",
    "agent:single": "node autoloop.agent.mjs",
    "agent:refactor": "node autoloop.agent.mjs --refactor",
    "agent:test": "node autoloop.agent.mjs --test-only",
    "agent:fix": "node autoloop.agent.mjs --fix-only",
    "agent:optimize": "node autoloop.agent.mjs --optimize-only",
    "agent:commit": "node autoloop.agent.mjs --commit-only",
    "agent:quality": "node autoloop.agent.mjs --quality-check",
    "agent:business": "node autoloop.agent.mjs --business-logic",
    "agent:test-business": "node autoloop.agent.mjs --business-logic",
    "agent:flows": "node autoloop.agent.mjs --test-flows",
    "agent:fix-logic": "node autoloop.agent.mjs --fix-business-logic",
    "agent:refactor": "node autoloop.agent.mjs --refactor-only",
    "agent:organize": "node autoloop.agent.mjs --organize-files",
    "agent:cleanup": "node autoloop.agent.mjs --cleanup-files",
    "agent:evaluate": "node autoloop.agent.mjs --evaluate-integration",
    "agent:cohesion": "node autoloop.agent.mjs --evaluate-cohesion",
    "agent:compatibility": "node autoloop.agent.mjs --evaluate-compatibility",
    "agent:test-all": "node autoloop.agent.mjs --test-all-features",
    "agent:fix-all": "node autoloop.agent.mjs --fix-all-issues",
    "agent:optimize-all": "node autoloop.agent.mjs --optimize-all",
    "dev": "npm run agent:auto",
    "build": "npm run test:full-suite && npm run lint:check && npm run type:check",
    "test": "vitest",
    "test:unit": "vitest run --reporter=verbose",
    "test:integration": "vitest run --config vitest.integration.config.js",
    "test:e2e": "playwright test",
    "test:full-suite": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:coverage": "vitest run --coverage",
    "test:watch": "vitest --watch",
    "test:ui": "vitest --ui",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx,.mjs",
    "lint:check": "eslint . --ext .js,.jsx,.ts,.tsx,.mjs --max-warnings 0",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx,.mjs --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type:check": "tsc --noEmit",
    "type:watch": "tsc --noEmit --watch",
    "security:audit": "npm audit",
    "security:fix": "npm audit fix",
    "security:check": "npm audit --audit-level moderate",
    "deps:check": "npm outdated",
    "deps:update": "npm update",
    "deps:audit": "npm audit",
    "deps:install": "npm install",
    "deps:clean": "npm ci",
    "clean": "rimraf dist node_modules/.cache",
    "clean:all": "rimraf dist node_modules/.cache .next .nuxt .output",
    "backup": "node scripts/backup.mjs",
    "restore": "node scripts/restore.mjs",
    "rollback": "node scripts/rollback.mjs",
    "deploy": "npm run build && npm run deploy:prod",
    "deploy:staging": "npm run build && npm run deploy:staging",
    "deploy:prod": "echo 'Deploy to production'",
    "deploy:staging": "echo 'Deploy to staging'",
    "monitor": "node scripts/monitor.mjs",
    "analyze": "node scripts/analyze.mjs",
    "optimize": "node scripts/optimize.mjs",
    "health": "node scripts/health.mjs",
    "status": "node scripts/status.mjs",
    "logs": "node scripts/logs.mjs",
    "metrics": "node scripts/metrics.mjs",
    "report": "node scripts/report.mjs",
    "validate": "npm run lint:check && npm run type:check && npm run test:unit",
    "precommit": "npm run validate",
    "prepush": "npm run test:full-suite",
    "postinstall": "npm run validate",
    "prepare": "husky install",
    "release": "npm run build && npm run test:full-suite && npm version patch",
    "release:minor": "npm run build && npm run test:full-suite && npm version minor",
    "release:major": "npm run build && npm run test:full-suite && npm version major"
  },
  "keywords": [
    "bootloader",
    "agent",
    "automation",
    "ai",
    "smart",
    "development",
    "continuous-improvement",
    "self-healing",
    "auto-optimization",
    "quality-assurance"
  ],
  "author": "AI Agent",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "chalk": "^5.3.0",
    "commander": "^11.1.0",
    "dotenv": "^16.3.1",
    "fs-extra": "^11.1.1",
    "glob": "^10.3.10",
    "inquirer": "^9.2.12",
    "ora": "^7.0.1",
    "progress": "^2.0.3",
    "rimraf": "^5.0.5",
    "semver": "^7.5.4",
    "simple-git": "^3.19.1",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@types/node": "^20.10.5",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vitest/coverage-c8": "^1.0.4",
    "@vitest/ui": "^1.0.4",
    "c8": "^8.0.1",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "playwright": "^1.40.1",
    "prettier": "^3.1.1",
    "typescript": "^5.3.3",
    "vitest": "^1.0.4"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx,mjs}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test:full-suite"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/smart-bootloader-system.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/smart-bootloader-system/issues"
  },
  "homepage": "https://github.com/your-username/smart-bootloader-system#readme",
  "files": [
    "autoloop.agent.mjs",
    "project.config.json",
    "instructions.meta.md",
    "project.graph.md",
    "log.system.md",
    "snapshot.version.json",
    "scripts/",
    "config/",
    "README.md"
  ],
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  }
}