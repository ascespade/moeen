{
  "graph": {},
  "fileDependencies": {
    "src\\types\\auth.ts": [
      "src\\types\\common"
    ],
    "src\\types\\api.ts": [
      "src\\types\\index"
    ],
    "src\\lib\\translations-manager.ts": [
      "src\\lib\\cuid",
      "src\\lib\\supabaseClient"
    ],
    "src\\lib\\theme-manager.ts": [
      "src\\lib\\design-system"
    ],
    "src\\lib\\performance-monitor.ts": [
      "src\\lib\\supabase-real"
    ],
    "src\\lib\\file-upload.ts": [
      "src\\lib\\supabase-real"
    ],
    "src\\lib\\dynamic-theme-manager.ts": [
      "src\\lib\\supabase\\client"
    ],
    "src\\lib\\dynamic-content-manager.ts": [
      "src\\lib\\supabase\\client"
    ],
    "src\\scripts\\seed-translations.ts": [
      "src\\lib\\translations-manager"
    ],
    "src\\scripts\\seed-homepage-content.ts": [
      "src\\lib\\dynamic-content-manager"
    ],
    "src\\hooks\\usePageI18n.ts": [
      "src\\hooks\\useI18n"
    ],
    "src\\app\\layout.tsx": [
      "src\\app\\globals.css"
    ],
    "src\\lib\\testing\\test-utils.ts": [
      "src\\lib\\monitoring\\logger"
    ],
    "src\\lib\\optimization\\performance.ts": [
      "src\\lib\\monitoring\\logger"
    ],
    "src\\lib\\database\\connection-pool.ts": [
      "src\\lib\\monitoring\\logger"
    ],
    "src\\lib\\deployment\\docker.ts": [
      "src\\lib\\monitoring\\logger"
    ],
    "src\\lib\\api\\whatsapp.ts": [
      "src\\lib\\api\\config"
    ],
    "src\\core\\validation\\index.ts": [
      "src\\core\\constants",
      "src\\core\\errors"
    ],
    "src\\core\\hooks\\index.ts": [
      "src\\core\\store",
      "src\\core\\api\\client",
      "src\\core\\utils\\index",
      "src\\core\\types"
    ],
    "src\\core\\errors\\index.ts": [
      "src\\core\\constants"
    ],
    "src\\core\\config\\index.ts": [
      "src\\core\\types"
    ],
    "src\\core\\api\\client.ts": [
      "src\\core\\constants",
      "src\\core\\errors",
      "src\\core\\utils\\index",
      "src\\core\\types"
    ],
    "src\\core\\api\\base-handler.ts": [
      "src\\core\\errors",
      "src\\core\\validation"
    ],
    "src\\components\\ui\\ThemeSwitch.tsx": [
      "src\\components\\ui\\Button",
      "src\\components\\ui\\Card"
    ],
    "src\\components\\ui\\DesignSystemDemo.tsx": [
      "src\\components\\ui\\CTAButton",
      "src\\components\\ui\\FeatureCard",
      "src\\components\\ui\\StatCard",
      "src\\components\\ui\\ThemeToggle",
      "src\\components\\ui\\RTLToggle"
    ],
    "src\\components\\common\\StatusBanner.tsx": [
      "src\\components\\common\\LiveDot"
    ]
  },
  "moduleUsage": {
    "src\\middleware.prod.ts": {
      "exports": [
        "middleware",
        "config"
      ],
      "used": false
    },
    "src\\middleware.disabled.ts": {
      "exports": [
        "middleware",
        "config"
      ],
      "used": false
    },
    "src\\__tests__\\setup.ts": {
      "exports": [
        "mockUser",
        "mockToken",
        "mockAuthResponse",
        "mockErrorResponse"
      ],
      "used": false
    },
    "src\\utils\\validation.ts": {
      "exports": [
        "isValidEmail",
        "isValidPassword",
        "isValidPhoneNumber",
        "isValidUrl",
        "isValidUuid",
        "isNotEmpty",
        "isNumeric",
        "isInteger",
        "isPositive",
        "isInRange",
        "hasMinLength",
        "hasMaxLength",
        "matchesPattern",
        "validateForm"
      ],
      "used": false
    },
    "src\\utils\\string.ts": {
      "exports": [
        "slugify",
        "camelCase",
        "pascalCase",
        "kebabCase",
        "snakeCase",
        "titleCase",
        "sentenceCase",
        "truncate",
        "truncateWords",
        "stripHtml",
        "escapeHtml",
        "unescapeHtml",
        "removeAccents",
        "generateRandomString",
        "generateRandomId",
        "maskEmail",
        "maskPhone",
        "maskCreditCard",
        "highlightText",
        "escapeRegex",
        "pluralize",
        "ordinal",
        "initials",
        "capitalize",
        "capitalizeWords"
      ],
      "used": false
    },
    "src\\utils\\storage.ts": {
      "exports": [
        "storage",
        "STORAGE_KEYS",
        "getUser",
        "setUser",
        "removeUser",
        "getToken",
        "setToken",
        "removeToken",
        "getRefreshToken",
        "setRefreshToken",
        "removeRefreshToken",
        "getTheme",
        "setTheme",
        "getLanguage",
        "setLanguage",
        "getSettings",
        "setSettings",
        "clearAuth"
      ],
      "used": false
    },
    "src\\utils\\format.ts": {
      "exports": [
        "formatDate",
        "formatRelativeTime",
        "formatNumber",
        "formatCurrency",
        "formatFileSize",
        "formatPhoneNumber",
        "truncateText",
        "capitalizeFirst",
        "formatInitials"
      ],
      "used": false
    },
    "src\\utils\\date.ts": {
      "exports": [
        "addDays",
        "addHours",
        "addMinutes",
        "addSeconds",
        "startOfDay",
        "endOfDay",
        "startOfWeek",
        "endOfWeek",
        "startOfMonth",
        "endOfMonth",
        "startOfYear",
        "endOfYear",
        "isSameDay",
        "isSameWeek",
        "isSameMonth",
        "isSameYear",
        "isToday",
        "isYesterday",
        "isTomorrow",
        "isPast",
        "isFuture",
        "getDaysInMonth",
        "getDaysInYear",
        "isLeapYear",
        "getWeekNumber",
        "getQuarter",
        "getAge",
        "getTimeAgo"
      ],
      "used": false
    },
    "src\\utils\\api.ts": {
      "exports": [
        "ApiError",
        "api",
        "addRequestInterceptor",
        "addResponseInterceptor",
        "buildQueryString",
        "buildUrl",
        "handleApiError",
        "withRetry"
      ],
      "used": false
    },
    "src\\utils\\api-client.ts": {
      "exports": [
        "ApiClient",
        "apiClient"
      ],
      "used": false
    },
    "src\\types\\supabase.ts": {
      "exports": [
        "Json",
        "Database"
      ],
      "used": false
    },
    "src\\types\\index.ts": {
      "exports": [
        "User",
        "Channel",
        "Message",
        "Conversation",
        "ApiResponse",
        "PaginationParams",
        "PaginatedResponse",
        "BaseComponentProps",
        "ButtonProps",
        "InputProps",
        "DashboardStats",
        "ChartData",
        "AppSettings",
        "AppError",
        "LoginForm",
        "RegisterForm",
        "WebhookEvent"
      ],
      "used": false
    },
    "src\\types\\database.ts": {
      "exports": [
        "UserPreferences",
        "Translation",
        "User",
        "Profile",
        "Patient",
        "Doctor",
        "Appointment",
        "Session",
        "InsuranceClaim",
        "ChatbotFlow",
        "ChatbotNode",
        "ChatbotEdge",
        "CRMLead",
        "CRMDeal",
        "CRMActivity",
        "Notification",
        "InternalMessage",
        "AuditLog",
        "Setting",
        "ApiResponse",
        "PaginatedResponse",
        "UserPreferencesResponse",
        "TranslationResponse"
      ],
      "used": false
    },
    "src\\types\\components.ts": {
      "exports": [
        "ComponentProps",
        "ButtonProps",
        "InputProps"
      ],
      "used": false
    },
    "src\\types\\common.ts": {
      "exports": [
        "BaseEntity",
        "ApiResponse",
        "PaginationParams",
        "PaginatedResponse"
      ],
      "used": false
    },
    "src\\types\\auth.ts": {
      "exports": [
        "User",
        "UserRole",
        "UserStatus",
        "LoginRequest",
        "LoginResponse"
      ],
      "used": false
    },
    "src\\types\\api.ts": {
      "exports": [
        "LoginRequest",
        "LoginResponse",
        "RegisterRequest",
        "RefreshTokenRequest",
        "CreateChannelRequest",
        "UpdateChannelRequest",
        "ChannelListParams",
        "ChannelListResponse",
        "SendMessageRequest",
        "MessageListParams",
        "MessageListResponse",
        "UserListParams",
        "UserListResponse",
        "UpdateUserRequest",
        "UpdateSettingsRequest",
        "CreateWebhookRequest",
        "WebhookResponse",
        "AIRequest",
        "AIResponse",
        "LogListParams",
        "LogEntry",
        "LogListResponse"
      ],
      "used": false
    },
    "src\\theme\\index.ts": {
      "exports": [
        "Theme",
        "ResolvedTheme",
        "ColorPalette",
        "Typography",
        "Spacing",
        "Breakpoints",
        "Animation",
        "lightTheme",
        "darkTheme",
        "typography",
        "spacing",
        "breakpoints",
        "animation",
        "getThemeColors",
        "generateCSSVariables"
      ],
      "used": false
    },
    "src\\scripts\\validate-dynamic-content.ts": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\scripts\\seed-homepage-content.ts": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\scripts\\seed-database.ts": {
      "exports": [
        "seedDatabase"
      ],
      "used": false
    },
    "src\\scripts\\complete-translations.ts": {
      "exports": [
        "seedTranslations"
      ],
      "used": false
    },
    "src\\middleware\\security.ts": {
      "exports": [
        "SecurityMiddleware",
        "createSecurityMiddleware",
        "developmentSecurityConfig",
        "productionSecurityConfig",
        "stagingSecurityConfig"
      ],
      "used": false
    },
    "src\\middleware\\rate-limiter.ts": {
      "exports": [
        "clearRateLimitCache",
        "rateLimiter"
      ],
      "used": false
    },
    "src\\lib\\whatsapp-integration.ts": {
      "exports": [
        "WhatsAppMessage",
        "WhatsAppContact",
        "WhatsAppTemplate",
        "WhatsAppIntegration"
      ],
      "used": false
    },
    "src\\lib\\whatsapp-business-api.ts": {
      "exports": [
        "WhatsAppMessage",
        "WhatsAppTemplate",
        "WhatsAppWebhookEvent",
        "WhatsAppBusinessAPI",
        "whatsappAPI"
      ],
      "used": false
    },
    "src\\lib\\validation.ts": {
      "exports": [
        "sanitizeHtml",
        "sanitizeText",
        "validationSchemas",
        "validateRequest",
        "generateCSRFToken",
        "validateCSRFToken",
        "default"
      ],
      "used": false
    },
    "src\\lib\\utils.ts": {
      "exports": [
        "cn"
      ],
      "used": false
    },
    "src\\lib\\translations-manager.ts": {
      "exports": [
        "Translation",
        "TranslationInput",
        "default"
      ],
      "used": false
    },
    "src\\lib\\theme.ts": {
      "exports": [
        "ThemeMode",
        "brand",
        "neutrals",
        "typography",
        "spacing",
        "elevation",
        "motion",
        "dirForLocale",
        "langForLocale"
      ],
      "used": false
    },
    "src\\lib\\theme-manager.ts": {
      "exports": [
        "ThemeMode",
        "ColorScheme",
        "AnimationPreference",
        "TypographyScale",
        "ThemeSettings",
        "ThemeState",
        "defaultThemes",
        "ThemeManager",
        "createThemeManager",
        "getSystemPreferences",
        "generateThemeCSS",
        "applyThemeToDocument",
        "useTheme",
        "default"
      ],
      "used": false
    },
    "src\\lib\\supabaseClient.ts": {
      "exports": [
        "getBrowserSupabase",
        "getServiceSupabase"
      ],
      "used": false
    },
    "src\\lib\\supabase.ts": {
      "exports": [
        "supabase",
        "supabaseAdmin",
        "Patient",
        "Doctor",
        "Appointment",
        "Session",
        "InsuranceClaim",
        "SupabaseDatabaseManager",
        "db"
      ],
      "used": false
    },
    "src\\lib\\supabase-real.ts": {
      "exports": [
        "supabase",
        "supabaseAdmin",
        "RealSupabaseManager",
        "realDB"
      ],
      "used": false
    },
    "src\\lib\\slack-integration.ts": {
      "exports": [
        "SlackMessage",
        "SlackChannel",
        "SlackUser",
        "SlackAppointment",
        "SlackNotification",
        "SlackIntegration"
      ],
      "used": false
    },
    "src\\lib\\security.ts": {
      "exports": [
        "CSRFProtection",
        "RateLimiter",
        "InputSanitizer",
        "securityHeaders",
        "PasswordValidator",
        "SessionSecurity"
      ],
      "used": false
    },
    "src\\lib\\saudi-ministry-health-integration.ts": {
      "exports": [
        "MinistryHealthRecord",
        "SehaIntegration",
        "ShoonIntegration",
        "TatmanIntegration",
        "SaudiMinistryHealthIntegration",
        "ministryHealthIntegration"
      ],
      "used": false
    },
    "src\\lib\\saudi-health-integration.ts": {
      "exports": [
        "SaudiHealthRecord",
        "SehaIntegration",
        "InsuranceProvider",
        "InsuranceClaim",
        "SaudiHealthSystemIntegration",
        "saudiHealthSystem"
      ],
      "used": false
    },
    "src\\lib\\router.ts": {
      "exports": [
        "User",
        "getDefaultRouteForUser",
        "isProtectedRoute",
        "isAdminRoute",
        "canAccessRoute",
        "getNavigationItems"
      ],
      "used": false
    },
    "src\\lib\\responsive-design.ts": {
      "exports": [
        "breakpoints",
        "Breakpoint",
        "useScreenSize",
        "responsive",
        "mobilePatterns",
        "touchFriendly",
        "accessibility",
        "rtl",
        "performance",
        "darkMode",
        "print",
        "useResponsive",
        "ResponsiveWrapper",
        "default"
      ],
      "used": false
    },
    "src\\lib\\rate-limiter.ts": {
      "exports": [
        "authRateLimiter",
        "apiRateLimiter",
        "uploadRateLimiter",
        "default"
      ],
      "used": false
    },
    "src\\lib\\private-center-integration.ts": {
      "exports": [
        "PrivateCenterLicense",
        "PrivateCenterAccreditation",
        "PrivateCenterInsurance",
        "PrivateCenterReporting",
        "PrivateCenterIntegration",
        "privateCenterIntegration"
      ],
      "used": false
    },
    "src\\lib\\performance.ts": {
      "exports": [
        "PerformanceMonitor",
        "default"
      ],
      "used": false
    },
    "src\\lib\\performance-optimizations.ts": {
      "exports": [
        "optimizeMemory",
        "lazyLoadComponent",
        "optimizeImage",
        "debounce",
        "throttle"
      ],
      "used": false
    },
    "src\\lib\\performance-monitor.ts": {
      "exports": [
        "PerformanceMonitor",
        "withPerformanceMonitoring",
        "performanceMonitor"
      ],
      "used": false
    },
    "src\\lib\\modern-interactions.ts": {
      "exports": [
        "ScrollReveal",
        "smoothScrollTo",
        "ParallaxScroll",
        "typeWriter",
        "animateCounter",
        "showLoading",
        "hideLoading",
        "Modal",
        "Tooltip",
        "LazyLoader",
        "FormValidator",
        "initModernInteractions",
        "ScrollReveal",
        "smoothScrollTo",
        "ParallaxScroll",
        "typeWriter",
        "animateCounter",
        "showLoading",
        "hideLoading",
        "Modal",
        "Tooltip",
        "LazyLoader",
        "FormValidator",
        ""
      ],
      "used": false
    },
    "src\\lib\\logger.ts": {
      "exports": [
        "logger"
      ],
      "used": false
    },
    "src\\lib\\integration-system.ts": {
      "exports": [
        "PatientRecord",
        "Session",
        "Exercise",
        "FamilyMember",
        "Doctor",
        "ScheduleSlot",
        "MessageTemplate",
        "EHRSystem",
        "CalendarAPI",
        "Message",
        "CommunicationAutomation",
        "DoctorsDashboard"
      ],
      "used": false
    },
    "src\\lib\\file-upload.ts": {
      "exports": [
        "ALLOWED_FILE_TYPES",
        "MAX_FILE_SIZES",
        "FileMetadata",
        "FileUploadHandler",
        "FileStorage",
        "LocalFileStorage",
        "fileUploadHandler"
      ],
      "used": false
    },
    "src\\lib\\error-handler.ts": {
      "exports": [
        "ErrorHandler",
        "errorHandler",
        "default"
      ],
      "used": false
    },
    "src\\lib\\encryption.ts": {
      "exports": [
        "encrypt",
        "decrypt",
        "hash",
        "sign",
        "verify",
        "generateToken",
        "encryptApiKey",
        "decryptApiKey",
        "encodeBase64",
        "decodeBase64",
        "default"
      ],
      "used": false
    },
    "src\\lib\\dynamic-theme-manager.ts": {
      "exports": [
        "ThemeMode",
        "ThemeConfig",
        "UserPreferences",
        "dynamicThemeManager",
        "default"
      ],
      "used": false
    },
    "src\\lib\\dynamic-content-manager.ts": {
      "exports": [
        "DynamicContent",
        "HomepageContent",
        "HeroSlide",
        "Service",
        "Testimonial",
        "GalleryImage",
        "FAQ",
        "dynamicContentManager",
        "default"
      ],
      "used": false
    },
    "src\\lib\\design-tokens.ts": {
      "exports": [
        "colors",
        "spacing",
        "fontSize",
        "fontWeight",
        "lineHeight",
        "borderRadius",
        "boxShadow",
        "zIndex",
        "transition",
        "breakpoints",
        "componentSizes",
        "getColor",
        "getSpacing",
        "buildClassName",
        "ColorCategory",
        "SemanticColor",
        "SpacingSize",
        "FontSize",
        "BorderRadius",
        "BoxShadow",
        "ZIndex"
      ],
      "used": false
    },
    "src\\lib\\design-system.ts": {
      "exports": [
        "designTokens",
        "getToken",
        "buildCSSVar",
        "responsive",
        "buildComponentClass",
        "themeColor",
        "spacing",
        "typography",
        "DesignToken",
        "ColorToken",
        "SpacingToken",
        "TypographyToken",
        "BorderToken",
        "ShadowToken",
        "AnimationToken",
        "LayoutToken",
        "ComponentToken",
        "ThemeConfig",
        "applyTheme",
        "default"
      ],
      "used": false
    },
    "src\\lib\\database.ts": {
      "exports": [
        "DatabaseConfig",
        "DatabaseManager"
      ],
      "used": false
    },
    "src\\lib\\database-utils.ts": {
      "exports": [
        "DatabaseUtils",
        "QueryBuilder",
        "EntityOperations",
        "DatabaseValidation",
        "MigrationHelpers",
        "default"
      ],
      "used": false
    },
    "src\\lib\\cuid.ts": {
      "exports": [
        "generateCuid",
        "generateDbCuid",
        "cuid",
        "isValidCuid",
        "extractPrefix",
        "generateMultipleCuid",
        "generateProductionCuid",
        "generatePublicId",
        "generateShortId",
        "cuidEntity",
        "default"
      ],
      "used": false
    },
    "src\\lib\\conversation-flows.ts": {
      "exports": [
        "IntentAnalyzer",
        "ActionExecutor",
        "FlowStep",
        "FlowCondition",
        "ConversationFlow",
        "FlowManager"
      ],
      "used": false
    },
    "src\\lib\\cn.ts": {
      "exports": [
        "cn",
        "cva",
        "type VariantProps"
      ],
      "used": false
    },
    "src\\lib\\cache-system.ts": {
      "exports": [
        "MemoryCache",
        "CacheKeys",
        "CacheManager",
        "withCache",
        "cache"
      ],
      "used": false
    },
    "src\\lib\\analytics-stubs.ts": {
      "exports": [
        "trackEvent",
        "trackPage"
      ],
      "used": false
    },
    "src\\lib\\ai-assistant.ts": {
      "exports": [
        "AssistantPersona",
        "ConversationContext",
        "Interaction",
        "CrisisKeywords",
        "HemamAssistant"
      ],
      "used": false
    },
    "src\\lib\\accessibility.ts": {
      "exports": [
        "AccessibilitySettings",
        "AccessibilityManager",
        "accessibilityManager",
        "useAccessibility"
      ],
      "used": false
    },
    "src\\design-system\\types.ts": {
      "exports": [
        "Theme",
        "Language",
        "Direction",
        "DesignSystemConfig"
      ],
      "used": false
    },
    "src\\design-system\\index.ts": {
      "exports": [
        "useTheme",
        "useThemeAware",
        "useDesignTokens",
        "useThemeColors",
        ""
      ],
      "used": false
    },
    "src\\hooks\\useTranslation.ts": {
      "exports": [
        "useTranslation"
      ],
      "used": false
    },
    "src\\hooks\\useToggle.ts": {
      "exports": [
        "useToggle",
        "useBoolean"
      ],
      "used": false
    },
    "src\\hooks\\useThrottle.ts": {
      "exports": [
        "useThrottle",
        "useThrottledCallback",
        "useThrottledValue"
      ],
      "used": false
    },
    "src\\hooks\\useT.tsx": {
      "exports": [
        "TranslationProvider",
        "useT",
        "default"
      ],
      "used": false
    },
    "src\\hooks\\usePrevious.ts": {
      "exports": [
        "usePrevious"
      ],
      "used": false
    },
    "src\\hooks\\usePerformance.ts": {
      "exports": [
        "usePerformanceMonitor",
        "useDebounce",
        "useThrottle",
        "useIntersectionObserver",
        "useVirtualization"
      ],
      "used": false
    },
    "src\\hooks\\usePageI18n.ts": {
      "exports": [
        "usePageI18n",
        "useNamespaceI18n",
        "useCommonI18n"
      ],
      "used": false
    },
    "src\\hooks\\useMemoryLeakPrevention.ts": {
      "exports": [
        "useMemoryLeakPrevention",
        "useEventListener",
        "useInterval",
        "useTimeout",
        "useAbortController",
        "useWebSocket"
      ],
      "used": false
    },
    "src\\hooks\\useMediaQuery.ts": {
      "exports": [
        "useMediaQuery",
        "useBreakpoint",
        "useDarkMode",
        "useReducedMotion",
        "useHighContrast",
        "usePrint",
        "useHover",
        "useTouch"
      ],
      "used": false
    },
    "src\\hooks\\useLocalStorage.ts": {
      "exports": [
        "useLocalStorage",
        "useSessionStorage"
      ],
      "used": false
    },
    "src\\hooks\\useKeyPress.ts": {
      "exports": [
        "useKeyPress",
        "useEscapeKey",
        "useEnterKey",
        "useArrowKeys",
        "useHotkey"
      ],
      "used": false
    },
    "src\\hooks\\useKeyboardNavigation.ts": {
      "exports": [
        "useKeyboardNavigation",
        "default"
      ],
      "used": false
    },
    "src\\hooks\\useIntersectionObserver.ts": {
      "exports": [
        "useIntersectionObserver",
        "useInView",
        "useLazyLoad"
      ],
      "used": false
    },
    "src\\hooks\\useI18n.ts": {
      "exports": [
        "Messages",
        "useI18n",
        "default"
      ],
      "used": false
    },
    "src\\hooks\\useForm.ts": {
      "exports": [
        "useForm"
      ],
      "used": false
    },
    "src\\hooks\\useErrorHandler.tsx": {
      "exports": [
        "useErrorHandler"
      ],
      "used": false
    },
    "src\\hooks\\useDebounce.ts": {
      "exports": [
        "useDebounce",
        "useDebouncedCallback",
        "useDebouncedValue"
      ],
      "used": false
    },
    "src\\hooks\\useCounter.ts": {
      "exports": [
        "useCounter"
      ],
      "used": false
    },
    "src\\hooks\\useClickOutside.ts": {
      "exports": [
        "useClickOutside"
      ],
      "used": false
    },
    "src\\hooks\\useBrandColorFromLogo.ts": {
      "exports": [
        "useBrandColorFromLogo",
        "default"
      ],
      "used": false
    },
    "src\\hooks\\useAuth.ts": {
      "exports": [
        "useAuth",
        "useRequireAuth",
        "useRole"
      ],
      "used": false
    },
    "src\\hooks\\useAsync.ts": {
      "exports": [
        "useAsync",
        "useAsyncEffect"
      ],
      "used": false
    },
    "src\\hooks\\useApi.ts": {
      "exports": [
        "useApi",
        "useApiPost",
        "useApiPut",
        "useApiDelete"
      ],
      "used": false
    },
    "src\\core\\utils.ts": {
      "exports": [
        "cn",
        "cva"
      ],
      "used": false
    },
    "src\\core\\index.ts": {
      "exports": [
        "apiClient",
        "baseApiHandler",
        "createApiHandler",
        "ErrorHandler",
        "ErrorFactory",
        "ValidationHelper",
        "useAuth",
        "useTheme",
        "useLanguage",
        "useNotifications",
        "useAuthStore",
        "useUIStore",
        "useDataStore"
      ],
      "used": false
    },
    "src\\context\\TranslationProvider.tsx": {
      "exports": [
        "TranslationProvider",
        "useTranslation"
      ],
      "used": false
    },
    "src\\config\\env.ts": {
      "exports": [
        "env",
        "validateEnv",
        "getConfig"
      ],
      "used": false
    },
    "src\\config\\database.ts": {
      "exports": [
        "databaseConfig",
        "default"
      ],
      "used": false
    },
    "src\\config\\auth.ts": {
      "exports": [
        "authConfig",
        "default"
      ],
      "used": false
    },
    "src\\config\\app.ts": {
      "exports": [
        "appConfig",
        "default"
      ],
      "used": false
    },
    "src\\config\\api.ts": {
      "exports": [
        "apiConfig",
        "default"
      ],
      "used": false
    },
    "src\\constants\\validation.ts": {
      "exports": [
        "VALIDATION_RULES",
        "VALIDATION_MESSAGES",
        "FILE_VALIDATION"
      ],
      "used": false
    },
    "src\\constants\\ui.ts": {
      "exports": [
        "BREAKPOINTS",
        "Z_INDEX",
        "ANIMATION_DURATION",
        "COLORS",
        "SPACING",
        "BORDER_RADIUS",
        "FONT_SIZES",
        "FONT_WEIGHTS",
        "SHADOWS"
      ],
      "used": false
    },
    "src\\constants\\theme.ts": {
      "exports": [
        "THEMES",
        "THEME_COLORS",
        "FONT_FAMILIES",
        "SPACING_SCALE",
        "BORDER_RADIUS_SCALE",
        "SHADOW_SCALE",
        "TRANSITION_DURATIONS",
        "TRANSITION_EASING"
      ],
      "used": false
    },
    "src\\constants\\storage.ts": {
      "exports": [
        "STORAGE_KEYS",
        "STORAGE_TYPES",
        "CACHE_DURATION",
        "STORAGE_QUOTAS"
      ],
      "used": false
    },
    "src\\constants\\routes.ts": {
      "exports": [
        "ROUTES",
        "PROTECTED_ROUTES",
        "ADMIN_ROUTES",
        "PUBLIC_ROUTES"
      ],
      "used": false
    },
    "src\\constants\\roles.ts": {
      "exports": [
        "USER_ROLES",
        "ROLE_PERMISSIONS",
        "UserRole"
      ],
      "used": false
    },
    "src\\constants\\i18n-keys.ts": {
      "exports": [
        "I18N_KEYS",
        "TranslationKey"
      ],
      "used": false
    },
    "src\\constants\\api.ts": {
      "exports": [
        "API_ENDPOINTS",
        "HTTP_STATUS",
        "API_TIMEOUTS",
        "PAGINATION"
      ],
      "used": false
    },
    "src\\components\\ThemeSwitcher.tsx": {
      "exports": [
        "ThemeSwitcher",
        "default"
      ],
      "used": false
    },
    "src\\components\\Navigation.tsx": {
      "exports": [
        "Navigation",
        "default"
      ],
      "used": false
    },
    "src\\components\\LanguageSwitcher.tsx": {
      "exports": [
        "LanguageSwitcher",
        "default"
      ],
      "used": false
    },
    "src\\components\\index.ts": {
      "exports": [
        "default as Sidebar",
        "default as HeaderSimple",
        "default as GlobalHeader",
        "default as SmartHeader",
        "default as ProtectedRoute",
        "default as KpiCard",
        "default as Charts",
        "LineChart",
        "BarChart",
        "AreaChart",
        "default as AppointmentManager",
        "default as PatientRecords",
        "default as PreVisitChecklist",
        "default as ActivationFlow",
        "default as ClaimsManager",
        "default as SettingsTabs",
        "default as KeywordEditor",
        "default as AccessibilitySettings",
        "default as MoainChatbot",
        "default as UIProvider",
        "default as I18nProvider",
        "default as DataTable",
        "default as Modal",
        "default as Tabs",
        "default as EmptyState",
        "default as LiveRegion",
        "default as ScreenReaderOnly"
      ],
      "used": false
    },
    "src\\components\\dynamic-stats.tsx": {
      "exports": [
        "DynamicStats",
        "default"
      ],
      "used": false
    },
    "src\\components\\dynamic-services.tsx": {
      "exports": [
        "DynamicServices",
        "default"
      ],
      "used": false
    },
    "src\\components\\dynamic-doctors-list.tsx": {
      "exports": [
        "DynamicDoctorsList",
        "default"
      ],
      "used": false
    },
    "src\\components\\dynamic-data-dashboard.tsx": {
      "exports": [
        "DynamicDataDashboard",
        "default"
      ],
      "used": false
    },
    "src\\components\\dynamic-contact-info.tsx": {
      "exports": [
        "DynamicContactInfo",
        "default"
      ],
      "used": false
    },
    "src\\app\\sitemap.ts": {
      "exports": [
        "sitemap",
        "default"
      ],
      "used": false
    },
    "src\\app\\robots.ts": {
      "exports": [
        "robots",
        "default"
      ],
      "used": false
    },
    "src\\app\\page.tsx": {
      "exports": [
        "HomePage",
        "default"
      ],
      "used": false
    },
    "src\\app\\not-found.tsx": {
      "exports": [
        "NotFound",
        "default"
      ],
      "used": false
    },
    "src\\app\\layout.tsx": {
      "exports": [
        "metadata",
        "viewport",
        "RootLayout",
        "default"
      ],
      "used": false
    },
    "src\\app\\layout.minimal.tsx": {
      "exports": [
        "RootLayout",
        "default"
      ],
      "used": false
    },
    "src\\app\\error.tsx": {
      "exports": [
        "GlobalError",
        "default"
      ],
      "used": false
    },
    "src\\lib\\validation\\security.ts": {
      "exports": [
        "sanitizeInput",
        "escapeSqlString",
        "securitySchemas",
        "validateRateLimit",
        "sanitizeObject",
        "validateCSRFToken",
        "validateFileType",
        "validateCSPHeader"
      ],
      "used": false
    },
    "src\\lib\\validation\\schemas.ts": {
      "exports": [
        "userSchema",
        "loginSchema",
        "patientSchema",
        "patientUpdateSchema",
        "doctorSchema",
        "appointmentSchema",
        "appointmentUpdateSchema",
        "paymentSchema",
        "insuranceClaimSchema",
        "claimUpdateSchema",
        "translationSchema",
        "reportSchema",
        "apiResponseSchema",
        "paginationSchema",
        "searchSchema",
        "fileUploadSchema",
        "medicalRecordSchema",
        "notificationSchema",
        "validateData",
        "validateQueryParams"
      ],
      "used": false
    },
    "src\\lib\\testing\\test-utils.ts": {
      "exports": [
        "testUtils",
        "createTestData"
      ],
      "used": false
    },
    "src\\lib\\supabase\\client.ts": {
      "exports": [
        "createClient",
        "createServerClient"
      ],
      "used": false
    },
    "src\\lib\\seo\\metadata.ts": {
      "exports": [
        "generateMetadata",
        "pageMetadata",
        "generateStructuredData",
        "default"
      ],
      "used": false
    },
    "src\\lib\\payments\\stripe.ts": {
      "exports": [
        "PaymentIntentData",
        "PaymentResult",
        "StripePaymentService",
        "stripeService"
      ],
      "used": false
    },
    "src\\lib\\payments\\moyasar.ts": {
      "exports": [
        "MoyasarPaymentService",
        "moyasarService"
      ],
      "used": false
    },
    "src\\lib\\optimization\\performance.ts": {
      "exports": [
        "performanceMonitor",
        "measurePerformance",
        "QueryOptimizer",
        "MemoryOptimizer",
        "CacheOptimizer",
        "BundleOptimizer",
        "ResponseOptimizer"
      ],
      "used": false
    },
    "src\\lib\\notifications\\sms.ts": {
      "exports": [
        "SMSNotificationService",
        "smsService"
      ],
      "used": false
    },
    "src\\lib\\notifications\\email.ts": {
      "exports": [
        "EmailNotificationService",
        "emailService"
      ],
      "used": false
    },
    "src\\lib\\monitoring\\logger.ts": {
      "exports": [
        "logger",
        "default"
      ],
      "used": false
    },
    "src\\lib\\utils\\request-helpers.ts": {
      "exports": [
        "getClientIP",
        "getUserAgent",
        "getClientInfo"
      ],
      "used": false
    },
    "src\\lib\\insurance\\providers.ts": {
      "exports": [
        "InsuranceProviderService",
        "insuranceService"
      ],
      "used": false
    },
    "src\\lib\\integrations\\test-helpers.ts": {
      "exports": [
        "WhatsAppConfig",
        "SMSConfig",
        "EmailConfig",
        "GoogleCalendarConfig",
        "SlackConfig",
        "SehaConfig",
        "TatmanConfig"
      ],
      "used": false
    },
    "src\\lib\\i18n\\translationService.ts": {
      "exports": [
        "translationService",
        "default"
      ],
      "used": false
    },
    "src\\lib\\errors\\api-errors.ts": {
      "exports": [
        "APIError",
        "ValidationError",
        "AuthenticationError",
        "AuthorizationError",
        "NotFoundError",
        "ConflictError",
        "RateLimitError",
        "ExternalServiceError",
        "DatabaseError",
        "PaymentError",
        "InsuranceError",
        "formatErrorResponse",
        "logError",
        "handleAPIError"
      ],
      "used": false
    },
    "src\\lib\\deployment\\docker.ts": {
      "exports": [
        "DockerConfigGenerator"
      ],
      "used": false
    },
    "src\\lib\\database\\connection-pool.ts": {
      "exports": [
        "connectionPool"
      ],
      "used": false
    },
    "src\\lib\\cache\\redis.ts": {
      "exports": [
        "cached",
        "cache",
        "CACHE_KEYS"
      ],
      "used": false
    },
    "src\\lib\\auth\\roles.ts": {
      "exports": [
        "Role",
        "canViewAdmin",
        "canWriteConversations",
        "canReadOnly"
      ],
      "used": false
    },
    "src\\lib\\auth\\index.ts": {
      "exports": [
        "ROLES",
        "PERMISSIONS",
        "Role",
        "Permission",
        "authorize",
        "requireAuth",
        "requireRole",
        "type User",
        "type AuthResult",
        ""
      ],
      "used": false
    },
    "src\\lib\\auth\\authorize.ts": {
      "exports": [
        "User",
        "AuthResult",
        "requireRole",
        "requireAuth"
      ],
      "used": false
    },
    "src\\lib\\api\\whatsapp.ts": {
      "exports": [
        "sendWhatsAppMessage",
        "handleWhatsAppWebhook"
      ],
      "used": false
    },
    "src\\lib\\api\\config.ts": {
      "exports": [
        "AIProvider",
        "ApiConfig",
        "getApiConfig",
        "isWhatsAppConfigured",
        "isAIConfigured"
      ],
      "used": false
    },
    "src\\lib\\accessibility\\aria-utils.ts": {
      "exports": [
        "getFormAriaProps",
        "getButtonAriaProps",
        "getNavAriaProps",
        "getDialogAriaProps",
        "getAlertAriaProps",
        "getTableAriaProps",
        "getTabAriaProps",
        "getTabPanelAriaProps",
        "getLiveRegionAriaProps",
        "srOnly",
        "focusVisible",
        "handleKeyboardNav",
        "default"
      ],
      "used": false
    },
    "src\\design-system\\hooks\\index.ts": {
      "exports": [
        "useTheme",
        "useLanguage",
        "useRTL",
        "useBreakpoint"
      ],
      "used": false
    },
    "src\\core\\validation\\index.ts": {
      "exports": [
        "baseSchemas",
        "userSchemas",
        "patientSchemas",
        "doctorSchemas",
        "appointmentSchemas",
        "paymentSchemas",
        "insuranceSchemas",
        "fileUploadSchemas",
        "notificationSchemas",
        "ValidationHelper",
        "validateRequest",
        "validateQuery"
      ],
      "used": false
    },
    "src\\core\\types\\index.ts": {
      "exports": [
        "BaseEntity",
        "User",
        "UserProfile",
        "UserPreferences",
        "UserRole",
        "Patient",
        "EmergencyContact",
        "MedicalHistory",
        "Doctor",
        "Education",
        "DoctorSchedule",
        "TimeRange",
        "Appointment",
        "AppointmentType",
        "AppointmentStatus",
        "PaymentStatus",
        "Payment",
        "PaymentMethod",
        "InsuranceClaim",
        "ClaimStatus",
        "Notification",
        "NotificationType",
        "NotificationPriority",
        "NotificationChannel",
        "SystemConfig",
        "AuditLog",
        "ApiResponse",
        "PaginationInfo",
        "FormField",
        "SelectOption",
        "ValidationRule",
        "Theme",
        "ColorPalette",
        "Typography",
        "Spacing",
        "BorderRadius",
        "Status",
        "SortOrder",
        "SortField",
        "Address",
        "Prescription",
        "Medication",
        "NotificationSettings",
        "PrivacySettings"
      ],
      "used": false
    },
    "src\\core\\utils\\index.ts": {
      "exports": [
        "storageUtils",
        "debounce",
        "cn",
        "cva"
      ],
      "used": false
    },
    "src\\core\\store\\index.ts": {
      "exports": [
        "useAuthStore",
        "useUIStore",
        "useDataStore"
      ],
      "used": false
    },
    "src\\core\\theme\\index.ts": {
      "exports": [
        "useTheme",
        "useThemeAware",
        "useDesignTokens",
        "useThemeColors",
        "ThemeProvider",
        "ThemeMode",
        "ResolvedTheme"
      ],
      "used": false
    },
    "src\\core\\hooks\\index.ts": {
      "exports": [
        "useAuth",
        "useTheme",
        "useLanguage",
        "useSidebar",
        "useNotifications",
        "useModal",
        "useLoading",
        "usePatients",
        "useAppointments",
        "useDebounce",
        "useLocalStorage",
        "useAsync",
        "usePagination",
        "useSearch",
        "useSort"
      ],
      "used": false
    },
    "src\\core\\errors\\index.ts": {
      "exports": [
        "ValidationError",
        "AuthenticationError",
        "AuthorizationError",
        "NotFoundError",
        "ConflictError",
        "RateLimitError",
        "InternalServerError",
        "DatabaseError",
        "ExternalServiceError",
        "BusinessLogicError",
        "ErrorHandler",
        "ErrorFactory",
        "ErrorResponseFormatter",
        "asyncHandler",
        "ErrorBoundary"
      ],
      "used": false
    },
    "src\\core\\design-system\\index.ts": {
      "exports": [
        "colors",
        "typography",
        "spacing",
        "borderRadius",
        "shadows",
        "breakpoints",
        "zIndex",
        "animation",
        "theme"
      ],
      "used": false
    },
    "src\\core\\constants\\index.ts": {
      "exports": [
        "API_ENDPOINTS",
        "USER_ROLES",
        "APPOINTMENT_STATUS",
        "PAYMENT_STATUS",
        "PAYMENT_METHODS",
        "INSURANCE_PROVIDERS",
        "CLAIM_STATUS",
        "NOTIFICATION_TYPES",
        "NOTIFICATION_CHANNELS",
        "FILE_TYPES",
        "ALLOWED_FILE_EXTENSIONS",
        "MIME_TYPES",
        "PAGINATION",
        "TIME_CONSTANTS",
        "VALIDATION_RULES",
        "ERROR_CODES",
        "SUCCESS_MESSAGES",
        "ERROR_MESSAGES",
        "REGEX_PATTERNS",
        "STORAGE_KEYS",
        "QUERY_KEYS",
        "FEATURE_FLAGS"
      ],
      "used": false
    },
    "src\\core\\config\\index.ts": {
      "exports": [
        "ENV",
        "DATABASE_CONFIG",
        "SUPABASE_CONFIG",
        "API_CONFIG",
        "AUTH_CONFIG",
        "PAYMENT_CONFIG",
        "INSURANCE_CONFIG",
        "NOTIFICATION_CONFIG",
        "UPLOAD_CONFIG",
        "SECURITY_CONFIG",
        "APP_CONFIG",
        "DEFAULT_SYSTEM_CONFIG"
      ],
      "used": false
    },
    "src\\core\\api\\client.ts": {
      "exports": [
        "ApiRequestConfig",
        "apiClient"
      ],
      "used": false
    },
    "src\\core\\api\\base-handler.ts": {
      "exports": [
        "ApiHandlerConfig",
        "BaseApiHandler",
        "baseApiHandler",
        "createApiHandler"
      ],
      "used": false
    },
    "src\\components\\ui\\Tooltip.tsx": {
      "exports": [
        "Tooltip",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\Toast.tsx": {
      "exports": [
        "Toast",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\ThemeToggle.tsx": {
      "exports": [
        "ThemeToggle",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\ThemeSwitch.tsx": {
      "exports": [
        "ThemeSwitch",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\Textarea.tsx": {
      "exports": [
        "TextareaProps",
        "Textarea",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\Tabs.tsx": {
      "exports": [
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\Table.tsx": {
      "exports": [
        "Table",
        "THead",
        "TBody",
        "TR",
        "TH",
        "TD",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\Switch.tsx": {
      "exports": [
        "Switch",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\StatCard.tsx": {
      "exports": [
        "StatCard",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\Skeleton.tsx": {
      "exports": [
        "Skeleton"
      ],
      "used": false
    },
    "src\\components\\ui\\Select.tsx": {
      "exports": [
        "Select",
        "SelectGroup",
        "SelectValue",
        "SelectTrigger",
        "SelectContent",
        "SelectLabel",
        "SelectItem",
        "SelectSeparator",
        "SelectScrollUpButton",
        "SelectScrollDownButton",
        ""
      ],
      "used": false
    },
    "src\\components\\ui\\ScrollArea.tsx": {
      "exports": [
        "ScrollAreaProps",
        "ScrollArea",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\RTLToggle.tsx": {
      "exports": [
        "RTLToggle",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\Modal.tsx": {
      "exports": [
        "ModalProps",
        "Modal",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\LoadingSpinner.tsx": {
      "exports": [
        "LoadingSpinner",
        "LoadingScreen"
      ],
      "used": false
    },
    "src\\components\\ui\\Label.tsx": {
      "exports": [
        "Label",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\Input.tsx": {
      "exports": [
        "InputProps",
        "Input"
      ],
      "used": false
    },
    "src\\components\\ui\\index.ts": {
      "exports": [
        "Button",
        "Card",
        "CardHeader",
        "CardContent",
        "CardFooter",
        "CardTitle",
        "CardDescription",
        "",
        "Input",
        "Label",
        "Textarea",
        "Badge",
        "Table",
        "Modal",
        "Toast",
        "Tooltip",
        "Tabs",
        "Select",
        "Checkbox",
        "default as Switch",
        "ScrollArea",
        "DataTable",
        "LoadingSpinner",
        "LoadingScreen",
        "Skeleton",
        "default as ThemeSwitch",
        "default as ThemeToggle",
        "default as ThemeSwitcher",
        ""
      ],
      "used": false
    },
    "src\\components\\ui\\FeatureCard.tsx": {
      "exports": [
        "FeatureCard",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\DesignSystemDemo.tsx": {
      "exports": [
        "DesignSystemDemo",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\DataTable.tsx": {
      "exports": [
        "Column",
        "DataTable"
      ],
      "used": false
    },
    "src\\components\\ui\\CTAButton.tsx": {
      "exports": [
        "CTAButton",
        "default"
      ],
      "used": false
    },
    "src\\components\\ui\\Checkbox.tsx": {
      "exports": [
        "CheckboxProps",
        "Checkbox"
      ],
      "used": false
    },
    "src\\components\\ui\\Card.tsx": {
      "exports": [
        "Card",
        "CardHeader",
        "CardFooter",
        "CardTitle",
        "CardDescription",
        "CardContent",
        ""
      ],
      "used": false
    },
    "src\\components\\ui\\Button.tsx": {
      "exports": [
        "Button"
      ],
      "used": false
    },
    "src\\components\\ui\\Badge.tsx": {
      "exports": [
        "Badge"
      ],
      "used": false
    },
    "src\\components\\shell\\Sidebar.tsx": {
      "exports": [
        "Sidebar",
        "default"
      ],
      "used": false
    },
    "src\\components\\shell\\HeaderSimple.tsx": {
      "exports": [
        "HeaderSimple",
        "default"
      ],
      "used": false
    },
    "src\\components\\shell\\Header.tsx": {
      "exports": [
        "Header",
        "default"
      ],
      "used": false
    },
    "src\\components\\shared\\Tabs.tsx": {
      "exports": [
        "Tabs",
        "default"
      ],
      "used": false
    },
    "src\\components\\shared\\ScreenReaderOnly.tsx": {
      "exports": [
        "ScreenReaderOnly",
        "default"
      ],
      "used": false
    },
    "src\\components\\shared\\Modal.tsx": {
      "exports": [
        "Modal",
        "default"
      ],
      "used": false
    },
    "src\\components\\shared\\LiveRegion.tsx": {
      "exports": [
        "LiveRegion",
        "default"
      ],
      "used": false
    },
    "src\\components\\shared\\index.ts": {
      "exports": [
        "default as DataTable",
        "default as Modal",
        "default as Tabs",
        "FormField",
        "FormGroup",
        "FormRow",
        "FormActions",
        "default as EmptyState"
      ],
      "used": false
    },
    "src\\components\\shared\\Form.tsx": {
      "exports": [
        "FormField",
        "FormGroup",
        "FormRow",
        "FormActions"
      ],
      "used": false
    },
    "src\\components\\shared\\EmptyState.tsx": {
      "exports": [
        "EmptyState",
        "default"
      ],
      "used": false
    },
    "src\\components\\shared\\DataTable.tsx": {
      "exports": [
        "DataTable",
        "default"
      ],
      "used": false
    },
    "src\\components\\settings\\SettingsTabs.tsx": {
      "exports": [
        "SettingsTabs",
        "default"
      ],
      "used": false
    },
    "src\\components\\settings\\KeywordEditor.tsx": {
      "exports": [
        "KeywordEditor",
        "default"
      ],
      "used": false
    },
    "src\\components\\providers\\UIProvider.tsx": {
      "exports": [
        "AppTheme",
        "AppLang",
        "AppRole",
        "themeAtom",
        "langAtom",
        "UIProvider",
        "default"
      ],
      "used": false
    },
    "src\\components\\providers\\ThemeProvider.tsx": {
      "exports": [
        "ThemeProvider",
        "useTheme",
        "default"
      ],
      "used": false
    },
    "src\\components\\providers\\ModernInteractionsProvider.tsx": {
      "exports": [
        "ModernInteractionsProvider",
        "default"
      ],
      "used": false
    },
    "src\\components\\providers\\I18nProvider.tsx": {
      "exports": [
        "I18nProvider",
        "useT"
      ],
      "used": false
    },
    "src\\components\\providers\\DesignSystemProvider.tsx": {
      "exports": [
        "Theme",
        "Language",
        "Direction",
        "Spacing",
        "DesignSystemConfig",
        "DesignSystemContextValue",
        "DesignSystemProvider",
        "useDesignSystem"
      ],
      "used": false
    },
    "src\\components\\patients\\PatientRecords.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\components\\patient\\PreVisitChecklist.tsx": {
      "exports": [
        "PreVisitChecklist",
        "default"
      ],
      "used": false
    },
    "src\\components\\patient\\ActivationFlow.tsx": {
      "exports": [
        "ActivationFlow",
        "default"
      ],
      "used": false
    },
    "src\\components\\layout\\SmartHeader.tsx": {
      "exports": [
        "SmartHeader",
        "default"
      ],
      "used": false
    },
    "src\\components\\layout\\Header.tsx": {
      "exports": [
        "Header",
        "default"
      ],
      "used": false
    },
    "src\\components\\layout\\GlobalHeader.tsx": {
      "exports": [
        "GlobalHeader",
        "default"
      ],
      "used": false
    },
    "src\\components\\layout\\Footer.tsx": {
      "exports": [
        "Footer",
        "default"
      ],
      "used": false
    },
    "src\\components\\insurance\\ClaimsManager.tsx": {
      "exports": [
        "ClaimsManager",
        "default"
      ],
      "used": false
    },
    "src\\components\\dashboard\\KpiCard.tsx": {
      "exports": [
        "KpiCard",
        "default"
      ],
      "used": false
    },
    "src\\components\\dashboard\\DynamicCharts.tsx": {
      "exports": [
        "DynamicLineChart",
        "DynamicBarChart",
        "DynamicPieChart",
        "DynamicStatsCards",
        "DynamicRecentActivities",
        "DynamicDashboardCharts",
        "default"
      ],
      "used": false
    },
    "src\\components\\dashboard\\Charts.tsx": {
      "exports": [
        "ChartsA",
        "ChartsB",
        "ChartsC",
        "default"
      ],
      "used": false
    },
    "src\\components\\common\\StatusBanner.tsx": {
      "exports": [
        "StatusBanner",
        "default"
      ],
      "used": false
    },
    "src\\components\\common\\PlaceholderSquare.tsx": {
      "exports": [
        "PlaceholderSquare",
        "default"
      ],
      "used": false
    },
    "src\\components\\common\\PerformanceOptimizedImage.tsx": {
      "exports": [
        "PerformanceOptimizedImage",
        "default"
      ],
      "used": false
    },
    "src\\components\\common\\OptimizedImage.tsx": {
      "exports": [
        "OptimizedImage",
        "default"
      ],
      "used": false
    },
    "src\\components\\common\\LiveDot.tsx": {
      "exports": [
        "LiveDot",
        "default"
      ],
      "used": false
    },
    "src\\components\\common\\LanguageSwitcher.tsx": {
      "exports": [
        "LanguageSwitcher",
        "default"
      ],
      "used": false
    },
    "src\\components\\common\\index.ts": {
      "exports": [
        "default as ErrorBoundary",
        "default as OptimizedImage",
        "default as PerformanceOptimizedImage",
        "default as LiveDot",
        "default as StatusBanner",
        "default as EmptyState",
        "default as LanguageSwitcher",
        "default as DirectionToggle",
        "default as PlaceholderSquare"
      ],
      "used": false
    },
    "src\\components\\common\\ErrorBoundary.tsx": {
      "exports": [
        "ErrorBoundary",
        "useErrorHandler",
        "default"
      ],
      "used": false
    },
    "src\\components\\common\\EmptyState.tsx": {
      "exports": [
        "EmptyState",
        "default"
      ],
      "used": false
    },
    "src\\components\\common\\DirectionToggle.tsx": {
      "exports": [
        "DirectionToggle",
        "default"
      ],
      "used": false
    },
    "src\\components\\charts\\LineChart.tsx": {
      "exports": [
        "LineChart",
        "default"
      ],
      "used": false
    },
    "src\\components\\charts\\index.ts": {
      "exports": [
        "default as AreaChart",
        "default as BarChart",
        "default as LineChart"
      ],
      "used": false
    },
    "src\\components\\charts\\BarChart.tsx": {
      "exports": [
        "BarChart",
        "default"
      ],
      "used": false
    },
    "src\\components\\charts\\AreaChart.tsx": {
      "exports": [
        "AreaChart",
        "default"
      ],
      "used": false
    },
    "src\\components\\chatbot\\MoeenChatbot.tsx": {
      "exports": [
        "MoeenChatbot",
        "default"
      ],
      "used": false
    },
    "src\\components\\chatbot\\MoainChatbot.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\components\\booking\\SessionTypeSelector.tsx": {
      "exports": [
        "SessionTypeSelector",
        "default"
      ],
      "used": false
    },
    "src\\components\\booking\\AvailableSlotsPicker.tsx": {
      "exports": [
        "AvailableSlotsPicker",
        "default"
      ],
      "used": false
    },
    "src\\components\\appointments\\AppointmentManager.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\components\\auth\\ProtectedRoute.tsx": {
      "exports": [
        "ProtectedRoute",
        "default"
      ],
      "used": false
    },
    "src\\components\\accessibility\\AccessibilitySettings.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\uikit\\page.tsx": {
      "exports": [
        "UIKitPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\test\\page.tsx": {
      "exports": [
        "TestPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\simple\\page.tsx": {
      "exports": [
        "SimplePage",
        "default"
      ],
      "used": false
    },
    "src\\app\\design-system\\page.tsx": {
      "exports": [
        "DesignSystemPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\dashboard\\page.tsx": {
      "exports": [
        "DashboardPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\color-palette\\page.tsx": {
      "exports": [
        "ColorPalettePage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(legal)\\layout.tsx": {
      "exports": [
        "metadata",
        "LegalLayout",
        "default"
      ],
      "used": false
    },
    "src\\app\\(info)\\layout.tsx": {
      "exports": [
        "metadata",
        "InfoLayout",
        "default"
      ],
      "used": false
    },
    "src\\app\\(auth)\\layout.tsx": {
      "exports": [
        "metadata",
        "AuthLayout",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\layout.tsx": {
      "exports": [
        "AdminLayout",
        "default"
      ],
      "used": false
    },
    "src\\app\\uikit\\guidelines\\page.tsx": {
      "exports": [
        "GuidelinesPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\admin\\admin-dashboard\\page.tsx": {
      "exports": [
        "AdminDashboard",
        "default"
      ],
      "used": false
    },
    "src\\app\\(supervisor)\\supervisor-dashboard\\page.tsx": {
      "exports": [
        "SupervisorDashboard",
        "default"
      ],
      "used": false
    },
    "src\\app\\(staff)\\staff-dashboard\\page.tsx": {
      "exports": [
        "StaffDashboard",
        "default"
      ],
      "used": false
    },
    "src\\app\\(public)\\chatbot\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(patient)\\patient-dashboard\\page.tsx": {
      "exports": [
        "PatientDashboard",
        "default"
      ],
      "used": false
    },
    "src\\app\\(marketing)\\pricing\\page.tsx": {
      "exports": [
        "PricingPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(marketing)\\features\\page.tsx": {
      "exports": [
        "FeaturesPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(marketing)\\faq\\page.tsx": {
      "exports": [
        "FAQPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(legal)\\terms\\page.tsx": {
      "exports": [
        "TermsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(legal)\\privacy\\page.tsx": {
      "exports": [
        "PrivacyPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(info)\\contact\\page.tsx": {
      "exports": [
        "ContactPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(info)\\about\\page.tsx": {
      "exports": [
        "AboutPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\training\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\therapy\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\sessions\\page.tsx": {
      "exports": [
        "SessionsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\progress-tracking\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\progress\\page.tsx": {
      "exports": [
        "ProgressPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\patients\\page.tsx": {
      "exports": [
        "PatientsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\medical-file\\page.tsx": {
      "exports": [
        "MedicalFilePage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\insurance-claims\\page.tsx": {
      "exports": [
        "InsuranceClaimsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\insurance\\page.tsx": {
      "exports": [
        "InsurancePage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\family-support\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\family\\page.tsx": {
      "exports": [
        "FamilyPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\approvals\\page.tsx": {
      "exports": [
        "ApprovalsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\appointments\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(doctor)\\doctor-dashboard\\page.tsx": {
      "exports": [
        "DoctorDashboard",
        "default"
      ],
      "used": false
    },
    "src\\app\\(auth)\\reset-password\\page.tsx": {
      "exports": [
        "ResetPasswordPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(auth)\\verify-email\\page.tsx": {
      "exports": [
        "VerifyEmailPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(auth)\\register\\page.tsx": {
      "exports": [
        "RegisterPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(auth)\\login\\page.tsx": {
      "exports": [
        "LoginPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(auth)\\forgot-password\\page.tsx": {
      "exports": [
        "ForgotPasswordPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\settings\\page.tsx": {
      "exports": [
        "SettingsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\security\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\review\\page.tsx": {
      "exports": [
        "ReviewCenterPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\reports\\page.tsx": {
      "exports": [
        "ReportsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\profile\\page.tsx": {
      "exports": [
        "ProfilePage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\performance\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\payments\\page.tsx": {
      "exports": [
        "PaymentsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\notifications\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\messages\\page.tsx": {
      "exports": [
        "MessagesPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\integrations\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\flow\\page.tsx": {
      "exports": [
        "FlowBuilderPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\dynamic-data\\page.tsx": {
      "exports": [
        "metadata",
        "DynamicDataPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\doctors\\page.tsx": {
      "exports": [
        "metadata",
        "DoctorsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\conversations\\page.tsx": {
      "exports": [
        "ConversationsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\contact-info\\page.tsx": {
      "exports": [
        "metadata",
        "AdminContactPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\analytics\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\agent-dashboard\\page.tsx": {
      "exports": [
        "AgentDashboard",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\admin\\page.tsx": {
      "exports": [
        "AdminPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\patients\\[id]\\page.tsx": {
      "exports": [
        "PatientDetailsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\settings\\api-keys\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\crm\\leads\\page.tsx": {
      "exports": [
        "CRMLeadsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\crm\\flows\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\crm\\deals\\page.tsx": {
      "exports": [
        "CRMDealsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\crm\\contacts\\page.tsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\crm\\activities\\page.tsx": {
      "exports": [
        "CRMActivitiesPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\chatbot\\templates\\page.tsx": {
      "exports": [
        "ChatbotTemplatesPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\chatbot\\integrations\\page.tsx": {
      "exports": [
        "ChatbotIntegrationsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\chatbot\\flows\\page.tsx": {
      "exports": [
        "ChatbotFlowsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\chatbot\\analytics\\page.tsx": {
      "exports": [
        "ChatbotAnalyticsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\admin\\users\\page.tsx": {
      "exports": [
        "UsersAdminPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\admin\\roles\\page.tsx": {
      "exports": [
        "RolesPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\admin\\logs\\page.tsx": {
      "exports": [
        "LogsAdminPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\admin\\channels\\page.tsx": {
      "exports": [
        "ChannelsAdminPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\admin\\audit-logs\\page.tsx": {
      "exports": [
        "AuditLogsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\health\\sessions\\book\\page.tsx": {
      "exports": [
        "BookSessionPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\sessions\\[id]\\notes\\page.tsx": {
      "exports": [
        "SessionNotesPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\crm\\deals\\kanban\\page.tsx": {
      "exports": [
        "DealsKanbanPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\crm\\contacts\\[id]\\page.tsx": {
      "exports": [
        "ContactDetailsPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\chatbot\\templates\\[id]\\page.tsx": {
      "exports": [
        "TemplateEditorPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\chatbot\\flows\\[flowId]\\page.tsx": {
      "exports": [
        "FlowBuilderPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\admin\\therapists\\schedules\\page.tsx": {
      "exports": [
        "TherapistSchedulesPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(admin)\\admin\\payments\\invoices\\page.tsx": {
      "exports": [
        "InvoicesPage",
        "default"
      ],
      "used": false
    },
    "src\\app\\(health)\\health\\patients\\[id]\\iep\\page.tsx": {
      "exports": [
        "PatientIEPPage",
        "default"
      ],
      "used": false
    },
    "components\\Header.jsx": {
      "exports": [
        "default"
      ],
      "used": false
    },
    "components\\Footer.jsx": {
      "exports": [
        "default"
      ],
      "used": false
    }
  },
  "imports": {
    "src\\types\\auth.ts": [
      {
        "path": "./common",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\types\\common"
      }
    ],
    "src\\types\\api.ts": [
      {
        "path": "./index",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\types\\index"
      }
    ],
    "src\\lib\\translations-manager.ts": [
      {
        "path": "./cuid",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\cuid"
      },
      {
        "path": "./supabaseClient",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\supabaseClient"
      }
    ],
    "src\\lib\\theme-manager.ts": [
      {
        "path": "./design-system",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\design-system"
      }
    ],
    "src\\lib\\performance-monitor.ts": [
      {
        "path": "./supabase-real",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\supabase-real"
      }
    ],
    "src\\lib\\file-upload.ts": [
      {
        "path": "./supabase-real",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\supabase-real"
      }
    ],
    "src\\lib\\dynamic-theme-manager.ts": [
      {
        "path": "./supabase/client",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\supabase\\client"
      }
    ],
    "src\\lib\\dynamic-content-manager.ts": [
      {
        "path": "./supabase/client",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\supabase\\client"
      }
    ],
    "src\\scripts\\seed-translations.ts": [
      {
        "path": "../lib/translations-manager",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\translations-manager"
      }
    ],
    "src\\scripts\\seed-homepage-content.ts": [
      {
        "path": "../lib/dynamic-content-manager",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\dynamic-content-manager"
      }
    ],
    "src\\hooks\\usePageI18n.ts": [
      {
        "path": "./useI18n",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\hooks\\useI18n"
      }
    ],
    "src\\app\\layout.tsx": [
      {
        "path": "./globals.css",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\app\\globals.css"
      }
    ],
    "src\\lib\\testing\\test-utils.ts": [
      {
        "path": "../monitoring/logger",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\monitoring\\logger"
      }
    ],
    "src\\lib\\optimization\\performance.ts": [
      {
        "path": "../monitoring/logger",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\monitoring\\logger"
      }
    ],
    "src\\lib\\database\\connection-pool.ts": [
      {
        "path": "../monitoring/logger",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\monitoring\\logger"
      }
    ],
    "src\\lib\\deployment\\docker.ts": [
      {
        "path": "../monitoring/logger",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\monitoring\\logger"
      }
    ],
    "src\\lib\\api\\whatsapp.ts": [
      {
        "path": "./config",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\lib\\api\\config"
      }
    ],
    "src\\core\\validation\\index.ts": [
      {
        "path": "../constants",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\constants"
      },
      {
        "path": "../errors",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\errors"
      }
    ],
    "src\\core\\hooks\\index.ts": [
      {
        "path": "../store",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\store"
      },
      {
        "path": "../api/client",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\api\\client"
      },
      {
        "path": "../utils/index",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\utils\\index"
      },
      {
        "path": "../types",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\types"
      }
    ],
    "src\\core\\errors\\index.ts": [
      {
        "path": "../constants",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\constants"
      }
    ],
    "src\\core\\config\\index.ts": [
      {
        "path": "../types",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\types"
      }
    ],
    "src\\core\\api\\client.ts": [
      {
        "path": "../constants",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\constants"
      },
      {
        "path": "../errors",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\errors"
      },
      {
        "path": "../utils/index",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\utils\\index"
      },
      {
        "path": "../types",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\types"
      }
    ],
    "src\\core\\api\\base-handler.ts": [
      {
        "path": "../errors",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\errors"
      },
      {
        "path": "../validation",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\core\\validation"
      }
    ],
    "src\\components\\ui\\ThemeSwitch.tsx": [
      {
        "path": "./Button",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\components\\ui\\Button"
      },
      {
        "path": "./Card",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\components\\ui\\Card"
      }
    ],
    "src\\components\\ui\\DesignSystemDemo.tsx": [
      {
        "path": "./CTAButton",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\components\\ui\\CTAButton"
      },
      {
        "path": "./FeatureCard",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\components\\ui\\FeatureCard"
      },
      {
        "path": "./StatCard",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\components\\ui\\StatCard"
      },
      {
        "path": "./ThemeToggle",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\components\\ui\\ThemeToggle"
      },
      {
        "path": "./RTLToggle",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\components\\ui\\RTLToggle"
      }
    ],
    "src\\components\\common\\StatusBanner.tsx": [
      {
        "path": "./LiveDot",
        "type": "relative",
        "resolved": "D:\\Github\\moeen\\src\\components\\common\\LiveDot"
      }
    ]
  },
  "stats": {
    "totalFiles": 26,
    "totalImports": 40,
    "unusedModules": 322,
    "unusedModuleFiles": [
      "src\\middleware.prod.ts",
      "src\\middleware.disabled.ts",
      "src\\__tests__\\setup.ts",
      "src\\utils\\validation.ts",
      "src\\utils\\string.ts",
      "src\\utils\\storage.ts",
      "src\\utils\\format.ts",
      "src\\utils\\date.ts",
      "src\\utils\\api.ts",
      "src\\utils\\api-client.ts",
      "src\\types\\supabase.ts",
      "src\\types\\index.ts",
      "src\\types\\database.ts",
      "src\\types\\components.ts",
      "src\\types\\common.ts",
      "src\\types\\auth.ts",
      "src\\types\\api.ts",
      "src\\theme\\index.ts",
      "src\\scripts\\validate-dynamic-content.ts",
      "src\\scripts\\seed-homepage-content.ts",
      "src\\scripts\\seed-database.ts",
      "src\\scripts\\complete-translations.ts",
      "src\\middleware\\security.ts",
      "src\\middleware\\rate-limiter.ts",
      "src\\lib\\whatsapp-integration.ts",
      "src\\lib\\whatsapp-business-api.ts",
      "src\\lib\\validation.ts",
      "src\\lib\\utils.ts",
      "src\\lib\\translations-manager.ts",
      "src\\lib\\theme.ts",
      "src\\lib\\theme-manager.ts",
      "src\\lib\\supabaseClient.ts",
      "src\\lib\\supabase.ts",
      "src\\lib\\supabase-real.ts",
      "src\\lib\\slack-integration.ts",
      "src\\lib\\security.ts",
      "src\\lib\\saudi-ministry-health-integration.ts",
      "src\\lib\\saudi-health-integration.ts",
      "src\\lib\\router.ts",
      "src\\lib\\responsive-design.ts",
      "src\\lib\\rate-limiter.ts",
      "src\\lib\\private-center-integration.ts",
      "src\\lib\\performance.ts",
      "src\\lib\\performance-optimizations.ts",
      "src\\lib\\performance-monitor.ts",
      "src\\lib\\modern-interactions.ts",
      "src\\lib\\logger.ts",
      "src\\lib\\integration-system.ts",
      "src\\lib\\file-upload.ts",
      "src\\lib\\error-handler.ts",
      "src\\lib\\encryption.ts",
      "src\\lib\\dynamic-theme-manager.ts",
      "src\\lib\\dynamic-content-manager.ts",
      "src\\lib\\design-tokens.ts",
      "src\\lib\\design-system.ts",
      "src\\lib\\database.ts",
      "src\\lib\\database-utils.ts",
      "src\\lib\\cuid.ts",
      "src\\lib\\conversation-flows.ts",
      "src\\lib\\cn.ts",
      "src\\lib\\cache-system.ts",
      "src\\lib\\analytics-stubs.ts",
      "src\\lib\\ai-assistant.ts",
      "src\\lib\\accessibility.ts",
      "src\\design-system\\types.ts",
      "src\\design-system\\index.ts",
      "src\\hooks\\useTranslation.ts",
      "src\\hooks\\useToggle.ts",
      "src\\hooks\\useThrottle.ts",
      "src\\hooks\\useT.tsx",
      "src\\hooks\\usePrevious.ts",
      "src\\hooks\\usePerformance.ts",
      "src\\hooks\\usePageI18n.ts",
      "src\\hooks\\useMemoryLeakPrevention.ts",
      "src\\hooks\\useMediaQuery.ts",
      "src\\hooks\\useLocalStorage.ts",
      "src\\hooks\\useKeyPress.ts",
      "src\\hooks\\useKeyboardNavigation.ts",
      "src\\hooks\\useIntersectionObserver.ts",
      "src\\hooks\\useI18n.ts",
      "src\\hooks\\useForm.ts",
      "src\\hooks\\useErrorHandler.tsx",
      "src\\hooks\\useDebounce.ts",
      "src\\hooks\\useCounter.ts",
      "src\\hooks\\useClickOutside.ts",
      "src\\hooks\\useBrandColorFromLogo.ts",
      "src\\hooks\\useAuth.ts",
      "src\\hooks\\useAsync.ts",
      "src\\hooks\\useApi.ts",
      "src\\core\\utils.ts",
      "src\\core\\index.ts",
      "src\\context\\TranslationProvider.tsx",
      "src\\config\\env.ts",
      "src\\config\\database.ts",
      "src\\config\\auth.ts",
      "src\\config\\app.ts",
      "src\\config\\api.ts",
      "src\\constants\\validation.ts",
      "src\\constants\\ui.ts",
      "src\\constants\\theme.ts",
      "src\\constants\\storage.ts",
      "src\\constants\\routes.ts",
      "src\\constants\\roles.ts",
      "src\\constants\\i18n-keys.ts",
      "src\\constants\\api.ts",
      "src\\components\\ThemeSwitcher.tsx",
      "src\\components\\Navigation.tsx",
      "src\\components\\LanguageSwitcher.tsx",
      "src\\components\\index.ts",
      "src\\components\\dynamic-stats.tsx",
      "src\\components\\dynamic-services.tsx",
      "src\\components\\dynamic-doctors-list.tsx",
      "src\\components\\dynamic-data-dashboard.tsx",
      "src\\components\\dynamic-contact-info.tsx",
      "src\\app\\sitemap.ts",
      "src\\app\\robots.ts",
      "src\\app\\page.tsx",
      "src\\app\\not-found.tsx",
      "src\\app\\layout.tsx",
      "src\\app\\layout.minimal.tsx",
      "src\\app\\error.tsx",
      "src\\lib\\validation\\security.ts",
      "src\\lib\\validation\\schemas.ts",
      "src\\lib\\testing\\test-utils.ts",
      "src\\lib\\supabase\\client.ts",
      "src\\lib\\seo\\metadata.ts",
      "src\\lib\\payments\\stripe.ts",
      "src\\lib\\payments\\moyasar.ts",
      "src\\lib\\optimization\\performance.ts",
      "src\\lib\\notifications\\sms.ts",
      "src\\lib\\notifications\\email.ts",
      "src\\lib\\monitoring\\logger.ts",
      "src\\lib\\utils\\request-helpers.ts",
      "src\\lib\\insurance\\providers.ts",
      "src\\lib\\integrations\\test-helpers.ts",
      "src\\lib\\i18n\\translationService.ts",
      "src\\lib\\errors\\api-errors.ts",
      "src\\lib\\deployment\\docker.ts",
      "src\\lib\\database\\connection-pool.ts",
      "src\\lib\\cache\\redis.ts",
      "src\\lib\\auth\\roles.ts",
      "src\\lib\\auth\\index.ts",
      "src\\lib\\auth\\authorize.ts",
      "src\\lib\\api\\whatsapp.ts",
      "src\\lib\\api\\config.ts",
      "src\\lib\\accessibility\\aria-utils.ts",
      "src\\design-system\\hooks\\index.ts",
      "src\\core\\validation\\index.ts",
      "src\\core\\types\\index.ts",
      "src\\core\\utils\\index.ts",
      "src\\core\\store\\index.ts",
      "src\\core\\theme\\index.ts",
      "src\\core\\hooks\\index.ts",
      "src\\core\\errors\\index.ts",
      "src\\core\\design-system\\index.ts",
      "src\\core\\constants\\index.ts",
      "src\\core\\config\\index.ts",
      "src\\core\\api\\client.ts",
      "src\\core\\api\\base-handler.ts",
      "src\\components\\ui\\Tooltip.tsx",
      "src\\components\\ui\\Toast.tsx",
      "src\\components\\ui\\ThemeToggle.tsx",
      "src\\components\\ui\\ThemeSwitch.tsx",
      "src\\components\\ui\\Textarea.tsx",
      "src\\components\\ui\\Tabs.tsx",
      "src\\components\\ui\\Table.tsx",
      "src\\components\\ui\\Switch.tsx",
      "src\\components\\ui\\StatCard.tsx",
      "src\\components\\ui\\Skeleton.tsx",
      "src\\components\\ui\\Select.tsx",
      "src\\components\\ui\\ScrollArea.tsx",
      "src\\components\\ui\\RTLToggle.tsx",
      "src\\components\\ui\\Modal.tsx",
      "src\\components\\ui\\LoadingSpinner.tsx",
      "src\\components\\ui\\Label.tsx",
      "src\\components\\ui\\Input.tsx",
      "src\\components\\ui\\index.ts",
      "src\\components\\ui\\FeatureCard.tsx",
      "src\\components\\ui\\DesignSystemDemo.tsx",
      "src\\components\\ui\\DataTable.tsx",
      "src\\components\\ui\\CTAButton.tsx",
      "src\\components\\ui\\Checkbox.tsx",
      "src\\components\\ui\\Card.tsx",
      "src\\components\\ui\\Button.tsx",
      "src\\components\\ui\\Badge.tsx",
      "src\\components\\shell\\Sidebar.tsx",
      "src\\components\\shell\\HeaderSimple.tsx",
      "src\\components\\shell\\Header.tsx",
      "src\\components\\shared\\Tabs.tsx",
      "src\\components\\shared\\ScreenReaderOnly.tsx",
      "src\\components\\shared\\Modal.tsx",
      "src\\components\\shared\\LiveRegion.tsx",
      "src\\components\\shared\\index.ts",
      "src\\components\\shared\\Form.tsx",
      "src\\components\\shared\\EmptyState.tsx",
      "src\\components\\shared\\DataTable.tsx",
      "src\\components\\settings\\SettingsTabs.tsx",
      "src\\components\\settings\\KeywordEditor.tsx",
      "src\\components\\providers\\UIProvider.tsx",
      "src\\components\\providers\\ThemeProvider.tsx",
      "src\\components\\providers\\ModernInteractionsProvider.tsx",
      "src\\components\\providers\\I18nProvider.tsx",
      "src\\components\\providers\\DesignSystemProvider.tsx",
      "src\\components\\patients\\PatientRecords.tsx",
      "src\\components\\patient\\PreVisitChecklist.tsx",
      "src\\components\\patient\\ActivationFlow.tsx",
      "src\\components\\layout\\SmartHeader.tsx",
      "src\\components\\layout\\Header.tsx",
      "src\\components\\layout\\GlobalHeader.tsx",
      "src\\components\\layout\\Footer.tsx",
      "src\\components\\insurance\\ClaimsManager.tsx",
      "src\\components\\dashboard\\KpiCard.tsx",
      "src\\components\\dashboard\\DynamicCharts.tsx",
      "src\\components\\dashboard\\Charts.tsx",
      "src\\components\\common\\StatusBanner.tsx",
      "src\\components\\common\\PlaceholderSquare.tsx",
      "src\\components\\common\\PerformanceOptimizedImage.tsx",
      "src\\components\\common\\OptimizedImage.tsx",
      "src\\components\\common\\LiveDot.tsx",
      "src\\components\\common\\LanguageSwitcher.tsx",
      "src\\components\\common\\index.ts",
      "src\\components\\common\\ErrorBoundary.tsx",
      "src\\components\\common\\EmptyState.tsx",
      "src\\components\\common\\DirectionToggle.tsx",
      "src\\components\\charts\\LineChart.tsx",
      "src\\components\\charts\\index.ts",
      "src\\components\\charts\\BarChart.tsx",
      "src\\components\\charts\\AreaChart.tsx",
      "src\\components\\chatbot\\MoeenChatbot.tsx",
      "src\\components\\chatbot\\MoainChatbot.tsx",
      "src\\components\\booking\\SessionTypeSelector.tsx",
      "src\\components\\booking\\AvailableSlotsPicker.tsx",
      "src\\components\\appointments\\AppointmentManager.tsx",
      "src\\components\\auth\\ProtectedRoute.tsx",
      "src\\components\\accessibility\\AccessibilitySettings.tsx",
      "src\\app\\uikit\\page.tsx",
      "src\\app\\test\\page.tsx",
      "src\\app\\simple\\page.tsx",
      "src\\app\\design-system\\page.tsx",
      "src\\app\\dashboard\\page.tsx",
      "src\\app\\color-palette\\page.tsx",
      "src\\app\\(legal)\\layout.tsx",
      "src\\app\\(info)\\layout.tsx",
      "src\\app\\(auth)\\layout.tsx",
      "src\\app\\(admin)\\layout.tsx",
      "src\\app\\uikit\\guidelines\\page.tsx",
      "src\\app\\admin\\admin-dashboard\\page.tsx",
      "src\\app\\(supervisor)\\supervisor-dashboard\\page.tsx",
      "src\\app\\(staff)\\staff-dashboard\\page.tsx",
      "src\\app\\(public)\\chatbot\\page.tsx",
      "src\\app\\(patient)\\patient-dashboard\\page.tsx",
      "src\\app\\(marketing)\\pricing\\page.tsx",
      "src\\app\\(marketing)\\features\\page.tsx",
      "src\\app\\(marketing)\\faq\\page.tsx",
      "src\\app\\(legal)\\terms\\page.tsx",
      "src\\app\\(legal)\\privacy\\page.tsx",
      "src\\app\\(info)\\contact\\page.tsx",
      "src\\app\\(info)\\about\\page.tsx",
      "src\\app\\(health)\\training\\page.tsx",
      "src\\app\\(health)\\therapy\\page.tsx",
      "src\\app\\(health)\\sessions\\page.tsx",
      "src\\app\\(health)\\progress-tracking\\page.tsx",
      "src\\app\\(health)\\progress\\page.tsx",
      "src\\app\\(health)\\patients\\page.tsx",
      "src\\app\\(health)\\medical-file\\page.tsx",
      "src\\app\\(health)\\insurance-claims\\page.tsx",
      "src\\app\\(health)\\insurance\\page.tsx",
      "src\\app\\(health)\\family-support\\page.tsx",
      "src\\app\\(health)\\family\\page.tsx",
      "src\\app\\(health)\\approvals\\page.tsx",
      "src\\app\\(health)\\appointments\\page.tsx",
      "src\\app\\(doctor)\\doctor-dashboard\\page.tsx",
      "src\\app\\(auth)\\reset-password\\page.tsx",
      "src\\app\\(auth)\\verify-email\\page.tsx",
      "src\\app\\(auth)\\register\\page.tsx",
      "src\\app\\(auth)\\login\\page.tsx",
      "src\\app\\(auth)\\forgot-password\\page.tsx",
      "src\\app\\(admin)\\settings\\page.tsx",
      "src\\app\\(admin)\\security\\page.tsx",
      "src\\app\\(admin)\\review\\page.tsx",
      "src\\app\\(admin)\\reports\\page.tsx",
      "src\\app\\(admin)\\profile\\page.tsx",
      "src\\app\\(admin)\\performance\\page.tsx",
      "src\\app\\(admin)\\payments\\page.tsx",
      "src\\app\\(admin)\\notifications\\page.tsx",
      "src\\app\\(admin)\\messages\\page.tsx",
      "src\\app\\(admin)\\integrations\\page.tsx",
      "src\\app\\(admin)\\flow\\page.tsx",
      "src\\app\\(admin)\\dynamic-data\\page.tsx",
      "src\\app\\(admin)\\doctors\\page.tsx",
      "src\\app\\(admin)\\conversations\\page.tsx",
      "src\\app\\(admin)\\contact-info\\page.tsx",
      "src\\app\\(admin)\\analytics\\page.tsx",
      "src\\app\\(admin)\\agent-dashboard\\page.tsx",
      "src\\app\\(admin)\\admin\\page.tsx",
      "src\\app\\(health)\\patients\\[id]\\page.tsx",
      "src\\app\\(admin)\\settings\\api-keys\\page.tsx",
      "src\\app\\(admin)\\crm\\leads\\page.tsx",
      "src\\app\\(admin)\\crm\\flows\\page.tsx",
      "src\\app\\(admin)\\crm\\deals\\page.tsx",
      "src\\app\\(admin)\\crm\\contacts\\page.tsx",
      "src\\app\\(admin)\\crm\\activities\\page.tsx",
      "src\\app\\(admin)\\chatbot\\templates\\page.tsx",
      "src\\app\\(admin)\\chatbot\\integrations\\page.tsx",
      "src\\app\\(admin)\\chatbot\\flows\\page.tsx",
      "src\\app\\(admin)\\chatbot\\analytics\\page.tsx",
      "src\\app\\(admin)\\admin\\users\\page.tsx",
      "src\\app\\(admin)\\admin\\roles\\page.tsx",
      "src\\app\\(admin)\\admin\\logs\\page.tsx",
      "src\\app\\(admin)\\admin\\channels\\page.tsx",
      "src\\app\\(admin)\\admin\\audit-logs\\page.tsx",
      "src\\app\\(health)\\health\\sessions\\book\\page.tsx",
      "src\\app\\(admin)\\sessions\\[id]\\notes\\page.tsx",
      "src\\app\\(admin)\\crm\\deals\\kanban\\page.tsx",
      "src\\app\\(admin)\\crm\\contacts\\[id]\\page.tsx",
      "src\\app\\(admin)\\chatbot\\templates\\[id]\\page.tsx",
      "src\\app\\(admin)\\chatbot\\flows\\[flowId]\\page.tsx",
      "src\\app\\(admin)\\admin\\therapists\\schedules\\page.tsx",
      "src\\app\\(admin)\\admin\\payments\\invoices\\page.tsx",
      "src\\app\\(health)\\health\\patients\\[id]\\iep\\page.tsx",
      "components\\Header.jsx",
      "components\\Footer.jsx"
    ],
    "averageImportsPerFile": "1.54"
  }
}