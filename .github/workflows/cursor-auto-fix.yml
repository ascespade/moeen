name: 🤖 Cursor Auto-Fix

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'وش تبغى الـ Agent يسوي؟'
        required: false
        default: 'Fix all failing Playwright tests'
      model:
        description: 'أي Model تستخدم؟'
        required: false
        type: choice
        default: 'claude-sonnet-4'
        options:
          - 'claude-sonnet-4'
          - 'gpt-4o'
          - 'gpt-4-turbo'

env:
  NODE_VERSION: '18'
  SUPABASE_URL: ${{ vars.NEXT_PUBLIC_SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ vars.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ vars.SUPABASE_SERVICE_ROLE_KEY }}

jobs:
  auto-fix:
    name: 🤖 Auto-Fix
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: |
          echo "📦 تثبيت المكتبات..."
          npm ci

      - name: 🎭 Install Playwright Browsers
        run: |
          echo "🎭 تثبيت Playwright browsers..."
          npx playwright install --with-deps

      - name: 🧪 Run Tests (Before Fix)
        id: test_before
        continue-on-error: true
        run: |
          echo "🧪 تشغيل الاختبارات قبل الإصلاح..."
          npm test 2>&1 | tee test-before.log
          echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: 📊 Test Results (Before)
        run: |
          echo "## 📊 نتائج الاختبارات (قبل الإصلاح)" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.test_before.outcome }}" == "success" ]; then
            echo "✅ **كل الاختبارات ناجحة!** مافيه شيء يحتاج إصلاح 🎉" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **فيه اختبارات فاشلة** - بنشغل الـ Agent للإصلاح..." >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            tail -30 test-before.log >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🚀 Install Cursor CLI
        if: steps.test_before.outcome == 'failure'
        run: |
          echo "🚀 تثبيت Cursor CLI..."
          curl https://cursor.com/install -fsS | bash
          echo "$HOME/.cursor/bin" >> $GITHUB_PATH

      - name: 🤖 Run Cursor Agent
        if: steps.test_before.outcome == 'failure'
        env:
          CURSOR_API_KEY: ${{ vars.CURSOR_API_KEY }}
        run: |
          echo "🤖 تشغيل Cursor Agent..."
          
          PROMPT="${{ github.event.inputs.prompt }}"
          
          cursor-agent -p "
          🔧 **مهمة إصلاح Playwright Tests**
          
          **الطلب:** ${PROMPT}
          
          **التفاصيل:**
          - راجع ملف test-before.log للأخطاء
          - أصلح الكود في src/ أو tests/ أو e2e/
          - تأكد أن الإصلاح يحل المشكلة الحقيقية
          
          **قواعد صارمة:**
          ❌ لا تعطل أو تحذف الاختبارات
          ❌ لا تضف setTimeout عشوائي
          ❌ لا تعمل git commit أو push
          ❌ لا تعدل package.json أو workflows
          
          ✅ عدل فقط: src/, tests/, e2e/, components/, lib/
          ✅ أصلح السبب الجذري
          ✅ اكتب كود نظيف ومفهوم
          
          **Supabase Config:**
          - URL: ${SUPABASE_URL}
          - البيانات متوفرة كـ environment variables
          " --model ${{ github.event.inputs.model }}

      - name: 🧪 Run Tests (After Fix)
        if: steps.test_before.outcome == 'failure'
        id: test_after
        run: |
          echo "🧪 تشغيل الاختبارات بعد الإصلاح..."
          npm ci
          npx playwright install --with-deps
          npm test

      - name: 📊 Test Results (After)
        if: steps.test_before.outcome == 'failure'
        run: |
          echo "## 📊 نتائج الاختبارات (بعد الإصلاح)" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.test_after.outcome }}" == "success" ]; then
            echo "✅ **تم الإصلاح بنجاح!** كل الاختبارات تعمل الآن 🎉" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **لازال فيه مشاكل** - قد تحتاج تدخل يدوي" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📤 Upload Test Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            test-before.log
            test-results/
            playwright-report/

      - name: ✅ Create Pull Request
        if: steps.test_after.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "✅ إنشاء Pull Request..."
          
          BRANCH_NAME="cursor-auto-fix-${{ github.run_id }}"
          
          # إعداد Git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # إنشاء branch جديد
          git checkout -b ${BRANCH_NAME}
          
          # إضافة التغييرات
          git add -A
          
          # Commit
          git commit -m "🤖 fix: auto-fix by Cursor Agent (run #${{ github.run_id }})" || echo "No changes to commit"
          
          # Push
          git push origin ${BRANCH_NAME}
          
          # إنشاء PR
          gh pr create \
            --title "🤖 Auto-Fix: Tests Fixed by Cursor Agent" \
            --body "## 🤖 إصلاح تلقائي بواسطة Cursor Agent
          **تم بواسطة:** @${{ github.actor }}
          **Model:** ${{ github.event.inputs.model }}
          **Run ID:** ${{ github.run_id }}
          
          ### ✅ النتيجة
          تم إصلاح الاختبارات الفاشلة بنجاح!
          
          ### 📊 التفاصيل
          - تشغيل الـ workflow: [#${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - الـ test logs موجودة في artifacts
          
          ### 📋 المراجعة
          - [ ] راجع التغييرات
          - [ ] تأكد أن الإصلاح منطقي
          - [ ] لا توجد تغييرات غير مرغوبة
          - [ ] الاختبارات تمر باستمرار
          
          ---
          🤖 تم الإنشاء تلقائياً | [Cursor Dashboard](https://cursor.com/dashboard?tab=background-agents)" \
            --base ${{ github.ref_name }} \
            --head ${BRANCH_NAME}

      - name: 📊 Final Summary
        if: always()
        run: |
          echo "# 🎯 التقرير النهائي" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow:** ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "**شغله:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Model:** ${{ github.event.inputs.model }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 النتائج" >> $GITHUB_STEP_SUMMARY
          echo "- 🧪 اختبار قبل: ${{ steps.test_before.outcome }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.test_before.outcome }}" == "failure" ]; then
            echo "- 🤖 الإصلاح: تم التشغيل" >> $GITHUB_STEP_SUMMARY
            echo "- 🧪 اختبار بعد: ${{ steps.test_after.outcome }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 روابط مفيدة" >> $GITHUB_STEP_SUMMARY
          echo "- [Cursor Dashboard](https://cursor.com/dashboard?tab=background-agents)" >> $GITHUB_STEP_SUMMARY
          echo "- [Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
