name: 🤖 CI Assistant - Self-Healing Error Resolver

on:
  workflow_run:
    workflows: ["🚀 Ultimate CI Self-Healing Agent"]
    types: [completed]
    branches: [main, develop, feature/*, hotfix/*, ai-auto-fixes/*]

permissions:
  contents: write
  pull-requests: write
  issues: write
  checks: write
  statuses: write
  actions: read

env:
  NODE_VERSION: '20'
  NPM_VERSION: '10'
  CI: true
  NODE_ENV: production

jobs:
  analyze-and-fix:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: 📥 تحميل الكود
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 📦 إعداد Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 تثبيت التبعيات
        run: |
          npm ci
          npm install js-yaml sqlite3
          npx playwright install --with-deps chromium

      - name: 🧠 تهيئة قاعدة بيانات التعلم
        run: |
          echo "🧠 تهيئة قاعدة بيانات التعلم..."
          node scripts/ci-learning-db.js init

      - name: 🔍 تحليل الخطأ
        id: analyze-error
        run: |
          echo "🔍 تحليل خطأ الـ Self-Healing..."
          
          # إنشاء مجلدات التحليل
          mkdir -p analysis/ learning/ logs/
          
          # استخدام مدير الإصلاح الذكي
          echo "🧠 استخدام مدير الإصلاح الذكي..."
          node scripts/ci-self-healing-manager.js analyze .github/workflows/ultimate-ci-self-healing.yml "Workflow execution failed" || echo "فشل في تحليل الخطأ"

      - name: 🤖 إرسال الخطأ إلى Cursor Background Agent
        run: |
          echo "🤖 إرسال الخطأ إلى Cursor Background Agent..."
          
          # استخدام مدير الإصلاح الذكي مع Cursor Agent
          echo "🧠 استخدام مدير الإصلاح الذكي مع Cursor Agent..."
          node scripts/ci-self-healing-manager.js fix .github/workflows/ultimate-ci-self-healing.yml "YAML syntax error" || echo "فشل في الإصلاح الذكي"

      - name: 🧠 التعلم من الخطأ
        run: |
          echo "🧠 التعلم من الخطأ..."
          
          # إنشاء مجلد التعلم
          mkdir -p learning/
          
          # استخدام قاعدة بيانات التعلم
          echo "🧠 استخدام قاعدة بيانات التعلم..."
          node scripts/ci-learning-db.js init

      - name: 💾 حفظ التغييرات
        run: |
          echo "💾 حفظ التغييرات..."
          
          # فحص إضافي لمنع الحلقة المفرغة
          if [[ "${{ github.event.workflow_run.head_commit.message }}" == *"🤖 CI Assistant"* ]] || [[ "${{ github.event.workflow_run.head_commit.message }}" == *"CI Assistant"* ]]; then
            echo "⚠️ تم منع الإصلاح لتجنب الحلقة المفرغة"
            exit 0
          fi
          
          # إعداد Git
          git config --local user.email "action@github.com"
          git config --local user.name "CI Assistant"
          
          # إضافة التغييرات
          git add .
          
          # إنشاء commit مع علامة خاصة
          git commit -m "🤖 CI Assistant: إصلاح خطأ في Self-Healing - تم استخدام مدير الإصلاح الذكي - تم تطبيق التعلم من الأخطاء السابقة - تم تحسين النظام لتجنب تكرار الخطأ 🤖 تم بواسطة: CI Assistant" || echo "لا توجد تغييرات للحفظ"

      - name: 📤 رفع التغييرات
        run: |
          echo "📤 رفع التغييرات..."
          git push origin ${{ github.ref_name }} || echo "فشل في رفع التغييرات"

      - name: 📊 إنشاء تقرير الإصلاح
        run: |
          echo "📊 إنشاء تقرير الإصلاح..."
          
          # إنشاء تقرير
          cat > reports/ci-assistant-report.md << 'EOF'
          # 🤖 تقرير CI Assistant
          
          ## 📋 ملخص الإصلاح
          - **الوقت:** $(date)
          - **نوع الخطأ:** Workflow execution failed
          - **الحل المطبق:** Self-healing manager with learning
          - **نوع الإصلاح:** intelligent-fix
          
          ## 🔧 الإجراءات المتخذة
          1. تحليل خطأ الـ Self-Healing workflow
          2. استخدام مدير الإصلاح الذكي
          3. تطبيق التعلم من الأخطاء السابقة
          4. حفظ معلومات الخطأ للتعلم
          5. رفع التغييرات
          
          ## 📚 التعلم
          - تم حفظ الخطأ في قاعدة المعرفة
          - تم تحديث أنماط الأخطاء
          - النظام سيتجنب هذا الخطأ في المستقبل
          
          ## ✅ النتيجة
          تم إصلاح الخطأ بنجاح ورفع التغييرات.
          EOF
          
          echo "✅ تم إنشاء تقرير الإصلاح"

      - name: 📤 رفع التقرير
        uses: actions/upload-artifact@v4
        with:
          name: ci-assistant-report
          path: |
            reports/
            learning/
            analysis/
          retention-days: 30